{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-05-05T11:21:32.546Z",
    "end": "2025-05-05T11:21:33.187Z",
    "duration": 641,
    "testsRegistered": 7,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 6,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "adde35d9-468b-48c1-9962-f1ceff53215d",
      "title": "",
      "fullFile": "cypress/e2e/planning/planning-management.spec.ts",
      "file": "cypress/e2e/planning/planning-management.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d97843f5-229f-4fae-90cb-2d166a7734e9",
          "title": "Gestion des plannings",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "permet de générer un planning hebdomadaire",
              "fullTitle": "Gestion des plannings permet de générer un planning hebdomadaire",
              "timedOut": null,
              "duration": 544,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visitAsAuthenticatedUser('/planning/generator');\ncy.contains('h1', 'Générateur de planning').should('be.visible'); // Vérifier que la page de base est là\nvar nextMonday = getNextMonday();\ncy.log('Tentative de sélection de la date de début...');\n// Augmenter le timeout spécifiquement pour cet élément\ncy.get('#dateDebut', { timeout: 10000 }).should('be.visible').type(nextMonday.toISOString().split('T')[0]);\ncy.log('Date de début sélectionnée.');\n// Sélectionner un secteur opératoire\ncy.get('[data-cy=sector-select]').click();\ncy.get('[data-cy=sector-option-1]').click();\n// Définir les paramètres de génération\ncy.get('[data-cy=include-weekends]').click(); // Désactiver les weekends\ncy.get('[data-cy=respect-preferences]').click(); // Activer le respect des préférences\ncy.get('[data-cy=balance-workload]').click(); // Activer l'équilibrage de charge\n// Intercepter la requête de génération\ncy.intercept('POST', '**/api/planning/generate').as('generatePlanning');\n// Lancer la génération\ncy.get('[data-cy=generate-planning-button]').click();\n// Attendre la réponse de l'API\ncy.wait('@generatePlanning').its('response.statusCode').should('eq', 200);\n// Vérifier le message de succès\ncy.get('[data-cy=notification-success]')\n    .should('be.visible')\n    .and('contain', 'Planning généré avec succès');\n// Vérifier que le planning a été généré et redirige vers la vue du planning\ncy.url().should('include', '/planning/hebdomadaire');\ncy.contains('h1', 'Planning Hebdomadaire').should('be.visible');\ncy.get('table').should('be.visible');",
              "err": {
                "message": "Error: Échec d'authentification: 500 \"<!DOCTYPE html><html><head><style data-next-hide-fouc=\\\"true\\\">body{display:none}</style><noscript data-next-hide-fouc=\\\"true\\\"><style>body{display:block}</style></noscript><meta charSet=\\\"utf-8\\\" data-next-head=\\\"\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\" data-next-head=\\\"\\\"/><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills.js\\\"></script><script src=\\\"/_next/static/chunks/fallback/webpack.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/fallback/main.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/fallback/pages/_app.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/fallback/pages/_error.js\\\" defer=\\\"\\\"></script><noscript id=\\\"__next_css__DO_NOT_USE__\\\"></noscript></head><body><div id=\\\"__next\\\"></div><script src=\\\"/_next/static/chunks/fallback/react-refresh.js\\\"></script><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{\\\"statusCode\\\":500,\\\"hostname\\\":\\\"localhost\\\"}},\\\"page\\\":\\\"/_error\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"development\\\",\\\"isFallback\\\":false,\\\"err\\\":{\\\"name\\\":\\\"Error\\\",\\\"source\\\":\\\"server\\\",\\\"message\\\":\\\"Syntax error: \\\\\\\"next/font\\\\\\\" requires SWC although Babel is being used due to a custom babel config being present.\\\\nRead more: https://nextjs.org/docs/messages/babel-font-loader-conflict\\\",\\\"stack\\\":\\\"Error: \\\\u001b[31m\\\\u001b[1mSyntax error\\\\u001b[22m\\\\u001b[39m: \\\\\\\"next/font\\\\\\\" requires SWC although Babel is being used due to a custom babel config being present.\\\\nRead more: https://nextjs.org/docs/messages/babel-font-loader-conflict\\\\n    at getBabelError (/Users/vincentperreard/Mathildanesth/node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/parseBabel.js:24:16)\\\\n    at getModuleBuildError (/Users/vincentperreard/Mathildanesth/node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/webpackModuleError.js:111:49)\\\\n    at async /Users/vincentperreard/Mathildanesth/node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/index.js:29:49\\\\n    at async Promise.all (index 0)\\\\n    at async /Users/vincentperreard/Mathildanesth/node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/index.js:27:21\\\"},\\\"gip\\\":true,\\\"scriptLoader\\\":[]}</script></body></html>\"\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Gestion des plannings`",
                "estack": "Error: Échec d'authentification: 500 \"<!DOCTYPE html><html><head><style data-next-hide-fouc=\\\"true\\\">body{display:none}</style><noscript data-next-hide-fouc=\\\"true\\\"><style>body{display:block}</style></noscript><meta charSet=\\\"utf-8\\\" data-next-head=\\\"\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\" data-next-head=\\\"\\\"/><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills.js\\\"></script><script src=\\\"/_next/static/chunks/fallback/webpack.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/fallback/main.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/fallback/pages/_app.js\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/fallback/pages/_error.js\\\" defer=\\\"\\\"></script><noscript id=\\\"__next_css__DO_NOT_USE__\\\"></noscript></head><body><div id=\\\"__next\\\"></div><script src=\\\"/_next/static/chunks/fallback/react-refresh.js\\\"></script><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{\\\"statusCode\\\":500,\\\"hostname\\\":\\\"localhost\\\"}},\\\"page\\\":\\\"/_error\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"development\\\",\\\"isFallback\\\":false,\\\"err\\\":{\\\"name\\\":\\\"Error\\\",\\\"source\\\":\\\"server\\\",\\\"message\\\":\\\"Syntax error: \\\\\\\"next/font\\\\\\\" requires SWC although Babel is being used due to a custom babel config being present.\\\\nRead more: https://nextjs.org/docs/messages/babel-font-loader-conflict\\\",\\\"stack\\\":\\\"Error: \\\\u001b[31m\\\\u001b[1mSyntax error\\\\u001b[22m\\\\u001b[39m: \\\\\\\"next/font\\\\\\\" requires SWC although Babel is being used due to a custom babel config being present.\\\\nRead more: https://nextjs.org/docs/messages/babel-font-loader-conflict\\\\n    at getBabelError (/Users/vincentperreard/Mathildanesth/node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/parseBabel.js:24:16)\\\\n    at getModuleBuildError (/Users/vincentperreard/Mathildanesth/node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/webpackModuleError.js:111:49)\\\\n    at async /Users/vincentperreard/Mathildanesth/node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/index.js:29:49\\\\n    at async Promise.all (index 0)\\\\n    at async /Users/vincentperreard/Mathildanesth/node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/index.js:27:21\\\"},\\\"gip\\\":true,\\\"scriptLoader\\\":[]}</script></body></html>\"\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Gestion des plannings`\n    at Context.eval (webpack://mathildanesth/./cypress/support/commands.ts:97:18)\n    at getRet (http://localhost:3000/__cypress/runner/cypress_runner.js:119616:20)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://localhost:3000/__cypress/runner/cypress_runner.js:119627:66)\n    at Context.then (http://localhost:3000/__cypress/runner/cypress_runner.js:119878:21)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:140155:19)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:146100:15)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)",
                "diff": null
              },
              "uuid": "1f4908bc-a5a7-4d4a-b7ab-815b7713ebde",
              "parentUUID": "d97843f5-229f-4fae-90cb-2d166a7734e9",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "permet de modifier manuellement un planning",
              "fullTitle": "Gestion des plannings permet de modifier manuellement un planning",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visitAsAuthenticatedUser('/planning/hebdomadaire');\ncy.contains('h1', 'Planning Hebdomadaire').should('be.visible');\ncy.log('Attente des cellules de planning...');\n// Augmenter le timeout pour trouver une cellule vide\ncy.get('td[data-date]', { timeout: 15000 }).not(':has(div)').first().should('be.visible').click();\ncy.log('Cellule vide cliquée.');\n// Vérifier que le modal d'édition s'ouvre\ncy.get('[role=\"dialog\"]').should('be.visible');\ncy.get('[data-cy=assignment-modal]').should('be.visible');\n// Sélectionner un chirurgien\ncy.get('[data-cy=surgeon-select]').click();\ncy.get('[data-cy=surgeon-option]').first().click();\n// Sélectionner un MAR (Médecin Anesthésiste Réanimateur)\ncy.get('[data-cy=mar-select]').click();\ncy.get('[data-cy=mar-option]').first().click();\n// Ajouter un IADE (optionnel)\ncy.get('[data-cy=add-iade-checkbox]').click();\ncy.get('[data-cy=iade-select]').click();\ncy.get('[data-cy=iade-option]').first().click();\n// Définir le type d'intervention\ncy.get('[data-cy=assignment-type-select]').click();\ncy.get('[data-cy=assignment-type-option-standard]').click();\n// Ajouter des notes\ncy.get('[data-cy=assignment-notes]').type('Intervention programmée manuellement');\n// Intercepter la requête de création\ncy.intercept('POST', '**/api/planning/affectations').as('createAssignment');\n// Enregistrer l'assignation\ncy.get('[data-cy=save-assignment-button]').click();\n// Attendre la réponse de l'API\ncy.wait('@createAssignment').its('response.statusCode').should('eq', 201);\n// Vérifier le message de succès\ncy.get('[data-cy=notification-success]')\n    .should('be.visible')\n    .and('contain', 'Assignation créée');\n// Vérifier que le créneau est maintenant occupé\ncy.get('td[data-date] div[draggable=\"true\"]').should('have.length.at.least', 1);",
              "err": {},
              "uuid": "447d9329-d384-4fe5-bc49-06db58bd927d",
              "parentUUID": "d97843f5-229f-4fae-90cb-2d166a7734e9",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "permet de modifier une assignation existante",
              "fullTitle": "Gestion des plannings permet de modifier une assignation existante",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visitAsAuthenticatedUser('/planning/hebdomadaire');\ncy.contains('h1', 'Planning Hebdomadaire').should('be.visible');\ncreateTestAssignment(); // S'assure qu'une assignation existe\ncy.log('Attente de l\\'assignation à modifier...');\n// Augmenter le timeout pour trouver l'assignation\ncy.get('td[data-date] div[draggable=\"true\"]', { timeout: 10000 }).first().should('be.visible').click();\ncy.log('Assignation cliquée.');\n// Vérifier que le modal d'édition s'ouvre\ncy.get('[role=\"dialog\"][aria-modal=\"true\"]').should('be.visible');\ncy.get('[data-cy=assignment-modal]').should('be.visible');\n// Modifier les notes\ncy.get('[data-cy=assignment-notes]').clear().type('Intervention modifiée');\n// Intercepter la requête de mise à jour\ncy.intercept('PUT', '**/api/planning/affectations/**').as('updateAssignment');\n// Enregistrer les modifications\ncy.get('[data-cy=save-assignment-button]').click();\n// Attendre la réponse de l'API\ncy.wait('@updateAssignment').its('response.statusCode').should('eq', 200);\n// Vérifier le message de succès\ncy.get('[data-cy=notification-success]')\n    .should('be.visible')\n    .and('contain', 'Assignation mise à jour');",
              "err": {},
              "uuid": "77246e49-dff6-4ff8-ae2c-57177f6167db",
              "parentUUID": "d97843f5-229f-4fae-90cb-2d166a7734e9",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "permet de supprimer une assignation",
              "fullTitle": "Gestion des plannings permet de supprimer une assignation",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visitAsAuthenticatedUser('/planning/hebdomadaire');\ncy.contains('h1', 'Planning Hebdomadaire').should('be.visible');\ncreateTestAssignment();\ncy.log('Attente de l\\'assignation à supprimer...');\ncy.get('td[data-date] div[draggable=\"true\"]', { timeout: 10000 }).first().should('be.visible').click();\ncy.log('Assignation cliquée.');\n// Vérifier que le modal d'édition s'ouvre\ncy.get('[role=\"dialog\"][aria-modal=\"true\"]').should('be.visible');\ncy.get('[data-cy=assignment-modal]').should('be.visible');\n// Intercepter la requête de suppression\ncy.intercept('DELETE', '**/api/planning/affectations/**').as('deleteAssignment');\n// Cliquer sur le bouton de suppression\ncy.get('[data-cy=delete-assignment-button]').click();\n// Confirmer la suppression\ncy.get('[data-cy=confirm-delete-button]').click();\n// Attendre la réponse de l'API\ncy.wait('@deleteAssignment').its('response.statusCode').should('eq', 200);\n// Vérifier le message de succès\ncy.get('[data-cy=notification-success]')\n    .should('be.visible')\n    .and('contain', 'Assignation supprimée');\n// Vérifier que le créneau est maintenant vide\ncy.get('td[data-date] div[draggable=\"true\"]').should('not.exist');",
              "err": {},
              "uuid": "cc812d88-10bd-43fd-8d7f-d1776750fa45",
              "parentUUID": "d97843f5-229f-4fae-90cb-2d166a7734e9",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "permet de publier un planning",
              "fullTitle": "Gestion des plannings permet de publier un planning",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visitAsAuthenticatedUser('/planning/hebdomadaire');\ncy.contains('h1', 'Planning Hebdomadaire').should('be.visible');\ncreateTestAssignment();\ncy.log('Attente du bouton Publier...');\n// Augmenter le timeout si nécessaire, et s'assurer que le sélecteur est bon\ncy.get('[data-cy=publish-planning-button]', { timeout: 10000 }).should('be.visible').click();\n// NOTE: Ce data-cy existe-t-il vraiment ? A vérifier.\n// Confirmer la publication\ncy.get('[data-cy=confirm-publish-button]').click();\n// Attendre la réponse de l'API\ncy.wait('@publishPlanning').its('response.statusCode').should('eq', 200);\n// Vérifier le message de succès\ncy.get('[data-cy=notification-success]')\n    .should('be.visible')\n    .and('contain', 'Planning publié');\n// Vérifier que le planning est marqué comme publié\ncy.get('[data-cy=published-badge]').should('be.visible');",
              "err": {},
              "uuid": "4b2c5cab-ac4d-4f26-8c10-7c32ee2ee67c",
              "parentUUID": "d97843f5-229f-4fae-90cb-2d166a7734e9",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "permet de détecter les conflits lors de la génération d'un planning",
              "fullTitle": "Gestion des plannings permet de détecter les conflits lors de la génération d'un planning",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visitAsAuthenticatedUser('/planning/generator');\ncy.contains('h1', 'Générateur de planning').should('be.visible');\nvar nextMonday = getNextMonday();\ncy.log('Tentative de sélection de la date de début (conflits)...');\ncy.get('#dateDebut', { timeout: 10000 }).should('be.visible').type(nextMonday.toISOString().split('T')[0]);\ncy.log('Date de début sélectionnée (conflits).');\n// Sélectionner un secteur opératoire\ncy.get('[data-cy=sector-select]').click();\ncy.get('[data-cy=sector-option-1]').click();\n// Activer la détection de conflits stricte\ncy.get('[data-cy=strict-conflict-detection]').click();\n// Simuler un conflit (par exemple, en créant manuellement une absence pour un médecin)\ncreateConflictingLeave();\n// Intercepter la requête de génération\ncy.intercept('POST', '**/api/planning/generate').as('generatePlanning');\n// Lancer la génération\ncy.get('[data-cy=generate-planning-button]').click();\n// Attendre la réponse de l'API\ncy.wait('@generatePlanning');\n// Vérifier l'affichage des conflits\ncy.get('[data-cy=conflicts-modal]').should('be.visible');\ncy.get('[data-cy=conflict-item]').should('have.length.at.least', 1);\n// Résoudre les conflits en ignorant\ncy.get('[data-cy=ignore-conflicts-button]').click();\n// Vérifier que le planning est généré malgré les conflits\ncy.url().should('include', '/planning/hebdomadaire');\ncy.contains('h1', 'Planning Hebdomadaire').should('be.visible');\ncy.get('table').should('be.visible');",
              "err": {},
              "uuid": "f13bfa14-2ceb-4988-9b0a-d62ba55addcc",
              "parentUUID": "d97843f5-229f-4fae-90cb-2d166a7734e9",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "permet aux utilisateurs standards de visualiser leur planning",
              "fullTitle": "Gestion des plannings permet aux utilisateurs standards de visualiser leur planning",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.loginByApi('mar@example.com', 'Test123!');\ncy.visitAsAuthenticatedUser('/planning/hebdomadaire');\ncy.contains('h1', 'Planning Hebdomadaire').should('be.visible');\ncy.log('Attente du tableau de planning pour utilisateur standard...');\ncy.get('table', { timeout: 10000 }).should('be.visible');\ncy.log('Tableau trouvé.');\n// Vérifier que le planning est visible mais que les contrôles admin sont absents\ncy.get('table').should('be.visible');\ncy.get('[data-cy=generate-planning-button]').should('not.exist');\ncy.get('[data-cy=publish-planning-button]').should('not.exist');\n// Optionnel: vérifier des éléments spécifiques au rôle USER\ncy.contains('Mon Planning');\n// Déconnexion\ncy.request('/api/auth/deconnexion');\ncy.url().should('include', '/auth/connexion');",
              "err": {},
              "uuid": "b1bb2459-0daf-4ae1-b8a6-92a0a4fe2610",
              "parentUUID": "d97843f5-229f-4fae-90cb-2d166a7734e9",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "1f4908bc-a5a7-4d4a-b7ab-815b7713ebde"
          ],
          "pending": [],
          "skipped": [
            "447d9329-d384-4fe5-bc49-06db58bd927d",
            "77246e49-dff6-4ff8-ae2c-57177f6167db",
            "cc812d88-10bd-43fd-8d7f-d1776750fa45",
            "4b2c5cab-ac4d-4f26-8c10-7c32ee2ee67c",
            "f13bfa14-2ceb-4988-9b0a-d62ba55addcc",
            "b1bb2459-0daf-4ae1-b8a6-92a0a4fe2610"
          ],
          "duration": 544,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}