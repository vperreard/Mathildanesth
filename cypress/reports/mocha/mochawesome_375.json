{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-05-29T08:14:43.671Z",
    "end": "2025-05-29T08:14:46.213Z",
    "duration": 2542,
    "testsRegistered": 6,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 5,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "c76cb5a1-79d9-4e5a-b07f-5ce1a69fd6e6",
      "title": "",
      "fullFile": "cypress/e2e/auth/stable-login.spec.ts",
      "file": "cypress/e2e/auth/stable-login.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5cee1e86-9ab0-4535-866c-4dc99e2b4b97",
          "title": "Connexion - Tests Stabilisés",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "affiche correctement le formulaire de connexion",
              "fullTitle": "Connexion - Tests Stabilisés affiche correctement le formulaire de connexion",
              "timedOut": null,
              "duration": 94,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Vérifier la présence des éléments essentiels\ncy.waitForElement('[data-cy=email-input]');\ncy.waitForElement('[data-cy=password-input]');\ncy.waitForElement('[data-cy=submit-button]');\n// Vérifier que le titre est présent\ncy.contains('Connexion').should('be.visible');\n// Vérifier que les champs sont bien configurés\ncy.get('[data-cy=email-input]').should('have.attr', 'type', 'text');\ncy.get('[data-cy=password-input]').should('have.attr', 'type', 'password');",
              "err": {
                "message": "TypeError: cy.waitForPageLoad is not a function\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Connexion - Tests Stabilisés`",
                "estack": "TypeError: cy.waitForPageLoad is not a function\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Connexion - Tests Stabilisés`\n    at Context.eval (webpack://mathildanesth/./cypress/e2e/auth/stable-login.spec.ts:10:11)\n    at runnable.fn (http://localhost:3001/__cypress/runner/cypress_runner.js:140440:19)\n    at callFn (http://localhost:3001/__cypress/runner/cypress_runner.js:159518:21)\n    at Runnable.run (http://localhost:3001/__cypress/runner/cypress_runner.js:159505:7)\n    at <unknown> (http://localhost:3001/__cypress/runner/cypress_runner.js:165577:30)\n    at PassThroughHandlerContext.finallyHandler (http://localhost:3001/__cypress/runner/cypress_runner.js:4042:23)\n    at PassThroughHandlerContext.tryCatcher (http://localhost:3001/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3001/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3001/__cypress/runner/cypress_runner.js:1546:18)",
                "diff": null
              },
              "uuid": "e16f995e-e59f-4ea0-a77d-92e93f9b0320",
              "parentUUID": "5cee1e86-9ab0-4535-866c-4dc99e2b4b97",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "gère correctement les identifiants invalides",
              "fullTitle": "Connexion - Tests Stabilisés gère correctement les identifiants invalides",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Intercepter les requêtes pour surveiller les appels API\ncy.intercept('POST', '**/api/auth/login', {\n    statusCode: 401,\n    body: { error: 'Identifiants invalides' }\n}).as('loginFailed');\n// Saisir des identifiants incorrects\ncy.safeType('[data-cy=email-input]', 'user.invalide@test.com');\ncy.safeType('[data-cy=password-input]', 'motdepasse-incorrect');\ncy.safeClick('[data-cy=submit-button]');\n// Vérifier la réponse\ncy.wait('@loginFailed');\n// Vérifier l'affichage du message d'erreur\ncy.get('[data-cy=error-message]', { timeout: 5000 })\n    .should('be.visible')\n    .and('contain.text', 'Identifiants invalides');\n// Vérifier qu'on reste sur la page de connexion\ncy.url().should('include', '/auth/connexion');",
              "err": {},
              "uuid": "1d6886cb-371e-478d-a5ef-9879bcbc03ee",
              "parentUUID": "5cee1e86-9ab0-4535-866c-4dc99e2b4b97",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "permet la connexion avec des identifiants valides (mock)",
              "fullTitle": "Connexion - Tests Stabilisés permet la connexion avec des identifiants valides (mock)",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Mock d'une réponse de connexion réussie\ncy.intercept('POST', '**/api/auth/login', {\n    statusCode: 200,\n    body: {\n        success: true,\n        redirectUrl: '/',\n        user: { id: 1, email: 'admin@example.com', role: 'ADMIN_TOTAL' }\n    }\n}).as('loginSuccess');\n// Saisir des identifiants valides\ncy.safeType('[data-cy=email-input]', 'admin@example.com');\ncy.safeType('[data-cy=password-input]', 'Test123!');\ncy.safeClick('[data-cy=submit-button]');\n// Vérifier la réponse\ncy.wait('@loginSuccess');\n// Note: Dans un environnement de test, la redirection peut ne pas fonctionner\n// On vérifie juste que l'appel API s'est bien passé",
              "err": {},
              "uuid": "1ca92ee4-d196-45cd-9a41-28ed21256034",
              "parentUUID": "5cee1e86-9ab0-4535-866c-4dc99e2b4b97",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "désactive le bouton pendant le chargement",
              "fullTitle": "Connexion - Tests Stabilisés désactive le bouton pendant le chargement",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Intercepter avec un délai pour simuler une requête lente\ncy.intercept('POST', '**/api/auth/login', function (req) {\n    req.reply(function (res) {\n        res.delay(2000);\n        res.send({ statusCode: 200, body: { success: true } });\n    });\n}).as('slowLogin');\n// Saisir les identifiants\ncy.safeType('[data-cy=email-input]', 'admin@example.com');\ncy.safeType('[data-cy=password-input]', 'Test123!');\n// Cliquer et vérifier que le bouton est désactivé\ncy.safeClick('[data-cy=submit-button]');\ncy.get('[data-cy=submit-button]').should('be.disabled');\n// Vérifier le texte de chargement\ncy.get('[data-cy=submit-button]').should('contain.text', 'Connexion...');",
              "err": {},
              "uuid": "038853f8-ca9b-4818-8aee-acac3a55128d",
              "parentUUID": "5cee1e86-9ab0-4535-866c-4dc99e2b4b97",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "nettoie les erreurs lors de la saisie",
              "fullTitle": "Connexion - Tests Stabilisés nettoie les erreurs lors de la saisie",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Afficher d'abord une erreur\ncy.intercept('POST', '**/api/auth/login', {\n    statusCode: 401,\n    body: { error: 'Identifiants invalides' }\n}).as('loginError');\ncy.safeType('[data-cy=email-input]', 'wrong@test.com');\ncy.safeType('[data-cy=password-input]', 'wrong');\ncy.safeClick('[data-cy=submit-button]');\ncy.wait('@loginError');\ncy.get('[data-cy=error-message]').should('be.visible');\n// Maintenant modifier les champs et vérifier que l'erreur disparaît\ncy.get('[data-cy=email-input]').clear().type('new@test.com');\ncy.get('[data-cy=error-message]').should('not.exist');",
              "err": {},
              "uuid": "68383104-ca5d-462e-b094-7ddff8e31cd6",
              "parentUUID": "5cee1e86-9ab0-4535-866c-4dc99e2b4b97",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "gère les erreurs réseau",
              "fullTitle": "Connexion - Tests Stabilisés gère les erreurs réseau",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Simuler une erreur réseau\ncy.intercept('POST', '**/api/auth/login', { forceNetworkError: true }).as('networkError');\ncy.safeType('[data-cy=email-input]', 'admin@example.com');\ncy.safeType('[data-cy=password-input]', 'Test123!');\ncy.safeClick('[data-cy=submit-button]');\n// Vérifier qu'une erreur s'affiche\ncy.get('[data-cy=error-message]', { timeout: 10000 })\n    .should('be.visible')\n    .and('contain.text', 'Une erreur est survenue');",
              "err": {},
              "uuid": "a166ab05-a12e-4371-843b-83f244f3c324",
              "parentUUID": "5cee1e86-9ab0-4535-866c-4dc99e2b4b97",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e16f995e-e59f-4ea0-a77d-92e93f9b0320"
          ],
          "pending": [],
          "skipped": [
            "1d6886cb-371e-478d-a5ef-9879bcbc03ee",
            "1ca92ee4-d196-45cd-9a41-28ed21256034",
            "038853f8-ca9b-4818-8aee-acac3a55128d",
            "68383104-ca5d-462e-b094-7ddff8e31cd6",
            "a166ab05-a12e-4371-843b-83f244f3c324"
          ],
          "duration": 94,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}