{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-06-01T06:18:26.791Z",
    "end": "2025-06-01T06:18:27.729Z",
    "duration": 938,
    "testsRegistered": 6,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 5,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "3347eb4d-d2f8-4a3f-be83-4b712e08efd1",
      "title": "",
      "fullFile": "cypress/e2e/auth/authentication.spec.ts",
      "file": "cypress/e2e/auth/authentication.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "019903ce-0ea5-45e2-8fb5-b039cc345517",
          "title": "Authentification et gestion des sessions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "permet la connexion avec des identifiants valides",
              "fullTitle": "Authentification et gestion des sessions permet la connexion avec des identifiants valides",
              "timedOut": null,
              "duration": 141,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.visit('/auth/connexion');\ncy.waitForPageLoad();\n// Remplir le formulaire avec des commandes sécurisées\ncy.safeType('[data-cy=email-input]', testUser.email);\ncy.safeType('[data-cy=password-input]', testUser.password);\ncy.safeClick('[data-cy=submit-button]');\n// Attendre la réponse de l'API avec retry\ncy.waitForApiResponse('loginRequest');\n// Vérifier la redirection après connexion (avec timeout étendu)\ncy.url({ timeout: 15000 }).should('satisfy', function (url) {\n    return url.includes('/tableau-de-bord') || url.includes('/planning') || url.includes('/');\n});\n// Vérifier que le nom de l'utilisateur est affiché\ncy.waitForElement('[data-cy=user-name]');\ncy.get('[data-cy=user-name]').should('contain', testUser.name);",
              "err": {
                "message": "TypeError: cy.clearSessionStorage is not a function\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Authentification et gestion...`",
                "estack": "TypeError: cy.clearSessionStorage is not a function\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Authentification et gestion...`\n    at Context.eval (webpack://mathildanesth/./cypress/support/commands.ts:575:7)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:140165:43)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:146118:15)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromiseCtx (http://localhost:3000/__cypress/runner/cypress_runner.js:1583:10)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:2381:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:2370:9)",
                "diff": null
              },
              "uuid": "76d56e94-759e-4907-bb43-8e11052fc97a",
              "parentUUID": "019903ce-0ea5-45e2-8fb5-b039cc345517",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "affiche un message d'erreur pour des identifiants invalides",
              "fullTitle": "Authentification et gestion des sessions affiche un message d'erreur pour des identifiants invalides",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Intercepter la requête avec réponse d'erreur\ncy.intercept('POST', '**/api/auth/login', {\n    statusCode: 401,\n    body: { error: 'Identifiants invalides' }\n}).as('failedLogin');\ncy.visit('/auth/connexion');\ncy.waitForPageLoad();\ncy.safeType('[data-cy=email-input]', 'utilisateur.invalide@example.com');\ncy.safeType('[data-cy=password-input]', 'mot_de_passe_incorrect');\ncy.safeClick('[data-cy=submit-button]');\n// Attendre la réponse d'erreur\ncy.wait('@failedLogin');\n// Vérifier le message d'erreur\ncy.waitForElement('[data-cy=error-message]', 10000);\ncy.get('[data-cy=error-message]')\n    .should('be.visible')\n    .and('contain.text', 'Identifiants invalides');",
              "err": {},
              "uuid": "c5b4ec3a-690c-451a-a01b-0134565b1f08",
              "parentUUID": "019903ce-0ea5-45e2-8fb5-b039cc345517",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "maintient la session utilisateur après rafraîchissement de la page",
              "fullTitle": "Authentification et gestion des sessions maintient la session utilisateur après rafraîchissement de la page",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Se connecter via l'API (plus rapide que via l'UI)\ncy.loginByApi(testUser.email, testUser.password);\n// Visiter la page d'accueil\ncy.visitAsAuthenticatedUser('/tableau-de-bord');\ncy.waitForPageLoad();\n// Vérifier que l'utilisateur est connecté\ncy.waitForElement('[data-cy=user-name]');\ncy.get('[data-cy=user-name]').should('contain', testUser.name);\n// Rafraîchir la page\ncy.reload();\ncy.waitForPageLoad();\n// Vérifier que l'utilisateur est toujours connecté\ncy.waitForElement('[data-cy=user-name]');\ncy.get('[data-cy=user-name]').should('contain', testUser.name);",
              "err": {},
              "uuid": "05df1ba2-5604-4f4c-9d17-8bb5ba1603b2",
              "parentUUID": "019903ce-0ea5-45e2-8fb5-b039cc345517",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "permet la déconnexion",
              "fullTitle": "Authentification et gestion des sessions permet la déconnexion",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Se connecter via l'API\ncy.loginByApi(testUser.email, testUser.password);\ncy.visitAsAuthenticatedUser('/tableau-de-bord');\n// Ouvrir le menu utilisateur et cliquer sur déconnexion\ncy.get('[data-cy=user-menu]').click();\ncy.get('[data-cy=logout-option]').click();\n// Vérifier la redirection vers la page de connexion\ncy.url().should('include', '/auth/connexion');\n// Essayer d'accéder à une page protégée\ncy.visit('/tableau-de-bord');\n// Vérifier qu'on est redirigé vers la page de connexion\ncy.url().should('include', '/auth/connexion');",
              "err": {},
              "uuid": "bfc570b4-0a83-4b0f-922b-afda8f4bb01d",
              "parentUUID": "019903ce-0ea5-45e2-8fb5-b039cc345517",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "redirige vers la page demandée après connexion",
              "fullTitle": "Authentification et gestion des sessions redirige vers la page demandée après connexion",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Essayer d'accéder à une page protégée sans être connecté\ncy.visit('/planning');\n// Vérifier qu'on est redirigé vers la page de connexion\ncy.url().should('include', '/auth/connexion');\n// Se connecter avec commandes sécurisées\ncy.safeType('[data-cy=email-input]', testUser.email);\ncy.safeType('[data-cy=password-input]', testUser.password);\ncy.safeClick('[data-cy=submit-button]');\n// Attendre la réponse de connexion\ncy.waitForApiResponse('loginRequest');\n// Vérifier qu'on est redirigé vers la page initialement demandée\ncy.url().should('include', '/planning');",
              "err": {},
              "uuid": "f59ff778-8cb2-4976-897c-b2be772bdcfc",
              "parentUUID": "019903ce-0ea5-45e2-8fb5-b039cc345517",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "permet la récupération de mot de passe",
              "fullTitle": "Authentification et gestion des sessions permet la récupération de mot de passe",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('/auth/connexion');\n// Cliquer sur le lien \"Mot de passe oublié\"\ncy.get('[data-cy=forgot-password-link]').click();\n// Vérifier qu'on est sur la page de récupération de mot de passe\ncy.url().should('include', '/auth/reset-password');\n// Saisir l'email et soumettre\ncy.get('[data-cy=email-input]').type(testUser.email);\ncy.get('[data-cy=submit-button]').click();\n// Vérifier le message de confirmation\ncy.get('[data-cy=notification-success]')\n    .should('be.visible')\n    .and('contain', 'Instructions envoyées');",
              "err": {},
              "uuid": "39badc5f-fe8f-44fa-89c9-8b029e9a87e2",
              "parentUUID": "019903ce-0ea5-45e2-8fb5-b039cc345517",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "76d56e94-759e-4907-bb43-8e11052fc97a"
          ],
          "pending": [],
          "skipped": [
            "c5b4ec3a-690c-451a-a01b-0134565b1f08",
            "05df1ba2-5604-4f4c-9d17-8bb5ba1603b2",
            "bfc570b4-0a83-4b0f-922b-afda8f4bb01d",
            "f59ff778-8cb2-4976-897c-b2be772bdcfc",
            "39badc5f-fe8f-44fa-89c9-8b029e9a87e2"
          ],
          "duration": 141,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}