{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 0,
    "pending": 0,
    "failures": 6,
    "start": "2025-05-20T19:46:08.235Z",
    "end": "2025-05-20T19:46:43.307Z",
    "duration": 35072,
    "testsRegistered": 6,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "664dd3e3-17ac-4567-8c95-dd1f1eb129b1",
      "title": "",
      "fullFile": "cypress/e2e/notifications/assignment-swap-notifications.spec.ts",
      "file": "cypress/e2e/notifications/assignment-swap-notifications.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4a927608-b6ed-4da8-a3a7-80a021dbbc7f",
          "title": "Notifications d'échanges d'affectations",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "envoie une notification lors de la création d'une demande d'échange",
              "fullTitle": "Notifications d'échanges d'affectations envoie une notification lors de la création d'une demande d'échange",
              "timedOut": null,
              "duration": 10294,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Se connecter en tant qu'initiateur\ncy.loginByApi(this.testData.users.initiator.email, this.testData.users.initiator.password);\ncy.visitAsAuthenticatedUser('/planning');\n// Trouver une affectation et cliquer pour ouvrir le menu contextuel\ncy.get('[data-cy=assignment-item]').first().rightclick();\n// Sélectionner l'option \"Proposer un échange\"\ncy.get('[data-cy=context-menu-option]').contains('Proposer un échange').click();\n// Dans la modal d'échange, sélectionner un utilisateur cible\ncy.get('[data-cy=target-user-select]').click();\ncy.get('[data-cy=user-option]').contains(\"\".concat(this.testData.users.target.firstName, \" \").concat(this.testData.users.target.lastName)).click();\n// Optionnel: sélectionner une affectation cible (échange direct)\ncy.get('[data-cy=target-assignment-select]').click();\ncy.get('[data-cy=assignment-option]').first().click();\n// Ajouter un message\ncy.get('[data-cy=swap-message]').type(this.testData.swapRequests.pending.message);\n// Soumettre la demande d'échange\ncy.get('[data-cy=submit-swap-request]').click();\n// Vérifier que la demande a été créée\ncy.wait('@createSwapRequest').its('response.statusCode').should('eq', 201);\n// Afficher un message de succès\ncy.get('.Toastify__toast--success').should('be.visible');\n// Se déconnecter puis se connecter en tant qu'utilisateur cible\ncy.logout();\ncy.loginByApi(this.testData.users.target.email, this.testData.users.target.password);\n// Visiter la page d'accueil\ncy.visitAsAuthenticatedUser('/');\ncy.wait('@getNotifications');\n// Vérifier qu'une notification d'échange est présente\ncy.get('[data-cy=notification-bell]').click();\ncy.get('[data-cy=notification-panel]').should('be.visible');\ncy.get(\"[data-cy=notification-item][data-type=\\\"\".concat(this.testData.notifications.swapRequested.type, \"\\\"]\")).should('exist');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=assignment-item]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=assignment-item]`, but never found it.\n    at Context.eval (webpack://mathildanesth/./cypress/e2e/notifications/assignment-swap-notifications.spec.ts:29:11)",
                "diff": null
              },
              "uuid": "e2c7962e-5e3b-455d-9278-6a316e1ef512",
              "parentUUID": "4a927608-b6ed-4da8-a3a7-80a021dbbc7f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "envoie une notification lors de l'acceptation d'une demande d'échange",
              "fullTitle": "Notifications d'échanges d'affectations envoie une notification lors de l'acceptation d'une demande d'échange",
              "timedOut": null,
              "duration": 3069,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Se connecter en tant qu'utilisateur cible qui a reçu une demande\ncy.loginByApi(this.testData.users.target.email, this.testData.users.target.password);\n// Visiter la page des demandes d'échange\ncy.visitAsAuthenticatedUser('/planning/echanges');\ncy.wait('@getSwapRequests');\n// Trouver une demande en attente et cliquer dessus\ncy.get('[data-cy=swap-request-item][data-status=\"PENDING\"]').first().click();\n// Accepter la demande\ncy.get('[data-cy=accept-swap-request]').click();\ncy.get('[data-cy=confirm-action]').click();\n// Vérifier que la demande a été acceptée\ncy.wait('@updateSwapRequest').its('response.statusCode').should('eq', 200);\ncy.wait('@updateSwapRequest').its('response.body.status').should('eq', 'ACCEPTED');\n// Se déconnecter puis se connecter en tant qu'initiateur\ncy.logout();\ncy.loginByApi(this.testData.users.initiator.email, this.testData.users.initiator.password);\n// Visiter la page d'accueil\ncy.visitAsAuthenticatedUser('/');\ncy.wait('@getNotifications');\n// Vérifier qu'une notification d'acceptation est présente\ncy.get('[data-cy=notification-bell]').click();\ncy.get('[data-cy=notification-panel]').should('be.visible');\ncy.get(\"[data-cy=notification-item][data-type=\\\"\".concat(this.testData.notifications.swapAccepted.type, \"\\\"]\")).should('exist');",
              "err": {
                "message": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:3000/planning/echanges\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`",
                "estack": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:3000/planning/echanges\n\nThe response we received from your web server was:\n\n  > 404: Not Found\n\nThis was considered a failure because the status code was not `2xx`.\n\nIf you do not want status codes to cause failures pass the option: `failOnStatusCode: false`\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:133710:76)\n    at visitFailedByErr (http://localhost:3000/__cypress/runner/cypress_runner.js:133116:12)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:133693:13)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1667:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:2377:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2256:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://mathildanesth/./cypress/support/commands.ts:145:7)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:140165:43)",
                "diff": null
              },
              "uuid": "1edeb4ca-d571-48e9-aa64-5f3b4ac8bc81",
              "parentUUID": "4a927608-b6ed-4da8-a3a7-80a021dbbc7f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "envoie une notification lors du refus d'une demande d'échange",
              "fullTitle": "Notifications d'échanges d'affectations envoie une notification lors du refus d'une demande d'échange",
              "timedOut": null,
              "duration": 5080,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Créer d'abord une nouvelle demande d'échange\ncy.loginByApi(this.testData.users.initiator.email, this.testData.users.initiator.password);\ncy.visitAsAuthenticatedUser('/planning');\n// Créer une demande d'échange\ncy.get('[data-cy=assignment-item]').first().rightclick();\ncy.get('[data-cy=context-menu-option]').contains('Proposer un échange').click();\ncy.get('[data-cy=target-user-select]').click();\ncy.get('[data-cy=user-option]').contains(\"\".concat(this.testData.users.target.firstName, \" \").concat(this.testData.users.target.lastName)).click();\ncy.get('[data-cy=swap-message]').type(this.testData.swapRequests.rejected.message);\ncy.get('[data-cy=submit-swap-request]').click();\ncy.wait('@createSwapRequest');\n// Se connecter en tant qu'utilisateur cible\ncy.logout();\ncy.loginByApi(this.testData.users.target.email, this.testData.users.target.password);\n// Visiter la page des demandes d'échange\ncy.visitAsAuthenticatedUser('/planning/echanges');\ncy.wait('@getSwapRequests');\n// Trouver la demande et la refuser\ncy.get('[data-cy=swap-request-item][data-status=\"PENDING\"]').first().click();\ncy.get('[data-cy=reject-swap-request]').click();\ncy.get('[data-cy=rejection-reason]').type(this.testData.swapRequests.rejected.responseMessage);\ncy.get('[data-cy=confirm-rejection]').click();\n// Vérifier que la demande a été refusée\ncy.wait('@updateSwapRequest').its('response.statusCode').should('eq', 200);\ncy.wait('@updateSwapRequest').its('response.body.status').should('eq', 'REJECTED');\n// Se connecter en tant qu'initiateur\ncy.logout();\ncy.loginByApi(this.testData.users.initiator.email, this.testData.users.initiator.password);\n// Vérifier qu'une notification de refus est présente\ncy.visitAsAuthenticatedUser('/');\ncy.wait('@getNotifications');\ncy.get('[data-cy=notification-bell]').click();\ncy.get(\"[data-cy=notification-item][data-type=\\\"\".concat(this.testData.notifications.swapRejected.type, \"\\\"]\")).should('exist');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=assignment-item]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=assignment-item]`, but never found it.\n    at Context.eval (webpack://mathildanesth/./cypress/e2e/notifications/assignment-swap-notifications.spec.ts:107:11)",
                "diff": null
              },
              "uuid": "4f7fc258-dff4-4414-abb2-6af462b95207",
              "parentUUID": "4a927608-b6ed-4da8-a3a7-80a021dbbc7f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "envoie une notification lors de l'annulation d'une demande d'échange",
              "fullTitle": "Notifications d'échanges d'affectations envoie une notification lors de l'annulation d'une demande d'échange",
              "timedOut": null,
              "duration": 4827,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Créer d'abord une nouvelle demande d'échange\ncy.loginByApi(this.testData.users.initiator.email, this.testData.users.initiator.password);\ncy.visitAsAuthenticatedUser('/planning');\n// Créer une demande d'échange\ncy.get('[data-cy=assignment-item]').first().rightclick();\ncy.get('[data-cy=context-menu-option]').contains('Proposer un échange').click();\ncy.get('[data-cy=target-user-select]').click();\ncy.get('[data-cy=user-option]').contains(\"\".concat(this.testData.users.target.firstName, \" \").concat(this.testData.users.target.lastName)).click();\ncy.get('[data-cy=swap-message]').type(this.testData.swapRequests.cancelled.message);\ncy.get('[data-cy=submit-swap-request]').click();\ncy.wait('@createSwapRequest');\n// Visiter la page des demandes d'échange\ncy.visitAsAuthenticatedUser('/planning/echanges');\ncy.wait('@getSwapRequests');\n// Trouver la demande et l'annuler\ncy.get('[data-cy=swap-request-item][data-status=\"PENDING\"]').first().click();\ncy.get('[data-cy=cancel-swap-request]').click();\ncy.get('[data-cy=confirm-action]').click();\n// Vérifier que la demande a été annulée\ncy.wait('@updateSwapRequest').its('response.statusCode').should('eq', 200);\ncy.wait('@updateSwapRequest').its('response.body.status').should('eq', 'CANCELLED');\n// Se connecter en tant qu'utilisateur cible\ncy.logout();\ncy.loginByApi(this.testData.users.target.email, this.testData.users.target.password);\n// Vérifier qu'une notification d'annulation est présente\ncy.visitAsAuthenticatedUser('/');\ncy.wait('@getNotifications');\ncy.get('[data-cy=notification-bell]').click();\ncy.get(\"[data-cy=notification-item][data-type=\\\"\".concat(this.testData.notifications.swapCancelled.type, \"\\\"]\")).should('exist');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=assignment-item]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=assignment-item]`, but never found it.\n    at Context.eval (webpack://mathildanesth/./cypress/e2e/notifications/assignment-swap-notifications.spec.ts:150:11)",
                "diff": null
              },
              "uuid": "5c36cb71-2907-45f2-9243-6dca1f2c0d29",
              "parentUUID": "4a927608-b6ed-4da8-a3a7-80a021dbbc7f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "marque une notification comme lue lors de la consultation de la demande d'échange",
              "fullTitle": "Notifications d'échanges d'affectations marque une notification comme lue lors de la consultation de la demande d'échange",
              "timedOut": null,
              "duration": 4980,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Se connecter en tant qu'utilisateur cible\ncy.loginByApi(this.testData.users.target.email, this.testData.users.target.password);\n// Visiter la page d'accueil\ncy.visitAsAuthenticatedUser('/');\ncy.wait('@getNotifications');\n// Vérifier qu'une notification d'échange est présente et noter son ID\ncy.get('[data-cy=notification-bell]').click();\ncy.get(\"[data-cy=notification-item][data-type=\\\"\".concat(this.testData.notifications.swapRequested.type, \"\\\"]\"))\n    .first()\n    .invoke('attr', 'data-notification-id')\n    .then(function (notificationId) {\n    // Cliquer sur la notification\n    cy.get(\"[data-notification-id=\\\"\".concat(notificationId, \"\\\"]\")).click();\n    // Vérifier que la page de détails de la demande d'échange s'ouvre\n    cy.url().should('include', '/planning/echanges/');\n    // Vérifier que la notification a été marquée comme lue\n    cy.wait('@markNotificationsAsRead')\n        .its('request.body')\n        .should('deep.include', { id: notificationId });\n    // Retourner à la page d'accueil\n    cy.visitAsAuthenticatedUser('/');\n    cy.wait('@getNotifications');\n    // Vérifier que la notification n'est plus dans les non lues\n    cy.get('[data-cy=notification-bell]').click();\n    cy.get(\"[data-notification-id=\\\"\".concat(notificationId, \"\\\"]\")).should('have.class', 'read');\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=notification-bell]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=notification-bell]`, but never found it.\n    at Context.eval (webpack://mathildanesth/./cypress/e2e/notifications/assignment-swap-notifications.spec.ts:191:11)",
                "diff": null
              },
              "uuid": "f51adcdf-12eb-4143-b5b7-602d1f785760",
              "parentUUID": "4a927608-b6ed-4da8-a3a7-80a021dbbc7f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "ne notifie pas l'utilisateur lorsque les préférences sont désactivées",
              "fullTitle": "Notifications d'échanges d'affectations ne notifie pas l'utilisateur lorsque les préférences sont désactivées",
              "timedOut": null,
              "duration": 6290,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Désactiver les préférences de notifications pour les échanges\ncy.loginByApi(this.testData.users.target.email, this.testData.users.target.password);\ncy.visitAsAuthenticatedUser('/profil/notifications');\n// Désactiver les notifications pour les demandes d'échange\ncy.contains('Demandes d\\'échange').parent().find('div[role=\"switch\"]').click();\n// Créer une nouvelle demande d'échange\ncy.logout();\ncy.loginByApi(this.testData.users.initiator.email, this.testData.users.initiator.password);\ncy.visitAsAuthenticatedUser('/planning');\n// Créer une demande d'échange\ncy.get('[data-cy=assignment-item]').first().rightclick();\ncy.get('[data-cy=context-menu-option]').contains('Proposer un échange').click();\ncy.get('[data-cy=target-user-select]').click();\ncy.get('[data-cy=user-option]').contains(\"\".concat(this.testData.users.target.firstName, \" \").concat(this.testData.users.target.lastName)).click();\ncy.get('[data-cy=swap-message]').type('Cette notification ne devrait pas apparaître');\ncy.get('[data-cy=submit-swap-request]').click();\ncy.wait('@createSwapRequest');\n// Se connecter en tant qu'utilisateur cible\ncy.logout();\ncy.loginByApi(this.testData.users.target.email, this.testData.users.target.password);\n// Vérifier qu'aucune notification n'apparaît\ncy.visitAsAuthenticatedUser('/');\ncy.wait('@getNotifications');\ncy.get('[data-cy=notification-bell]').click();\ncy.get(\"[data-cy=notification-item][data-type=\\\"\".concat(this.testData.notifications.swapRequested.type, \"\\\"]\"))\n    .should('not.exist');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Demandes d'échange' but never did.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find content: 'Demandes d'échange' but never did.\n    at Context.eval (webpack://mathildanesth/./cypress/e2e/notifications/assignment-swap-notifications.spec.ts:223:11)",
                "diff": null
              },
              "uuid": "291809c8-17f0-426d-aa10-41dc5f84623b",
              "parentUUID": "4a927608-b6ed-4da8-a3a7-80a021dbbc7f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e2c7962e-5e3b-455d-9278-6a316e1ef512",
            "1edeb4ca-d571-48e9-aa64-5f3b4ac8bc81",
            "4f7fc258-dff4-4414-abb2-6af462b95207",
            "5c36cb71-2907-45f2-9243-6dca1f2c0d29",
            "f51adcdf-12eb-4143-b5b7-602d1f785760",
            "291809c8-17f0-426d-aa10-41dc5f84623b"
          ],
          "pending": [],
          "skipped": [],
          "duration": 34540,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}