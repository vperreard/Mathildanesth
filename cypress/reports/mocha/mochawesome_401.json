{
  "stats": {
    "suites": 2,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-06-01T06:01:22.085Z",
    "end": "2025-06-01T06:01:25.519Z",
    "duration": 3434,
    "testsRegistered": 19,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 17,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "6743b19d-1ad3-4a5f-9db4-9ebe49f61f35",
      "title": "",
      "fullFile": "cypress/e2e/bloc-operatoire/bloc-planning-management.spec.ts",
      "file": "cypress/e2e/bloc-operatoire/bloc-planning-management.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f9d9308c-4215-4e05-92ce-175be735916b",
          "title": "Gestion des plannings bloc opératoire",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4a12482a-2c0b-4433-8cb0-803faccbe9cc",
              "title": "Visualisation du planning",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "affiche correctement la vue hebdomadaire du planning",
                  "fullTitle": "Gestion des plannings bloc opératoire Visualisation du planning affiche correctement la vue hebdomadaire du planning",
                  "timedOut": null,
                  "duration": 881,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "// Vérifier les éléments principaux\ncy.get('[data-testid=planning-header]').should('be.visible');\ncy.get('[data-testid=week-selector]').should('be.visible');\ncy.get('[data-testid=planning-grid]').should('be.visible');\n// Vérifier l'affichage des salles d'opération\ncy.get('[data-testid=operating-rooms-list]').within(function () {\n    cy.contains('Salle 1').should('exist');\n    cy.contains('Salle 2').should('exist');\n    cy.contains('Salle Urgences').should('exist');\n});\n// Vérifier l'affichage des jours de la semaine\nvar jours = ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi'];\njours.forEach(function (jour) {\n    cy.get('[data-testid=planning-grid]').contains(jour).should('exist');\n});",
                  "err": {
                    "message": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:3001/bloc-operatoire\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: connect ECONNREFUSED 127.0.0.1:3001\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Gestion des plannings bloc ...`",
                    "estack": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:3001/bloc-operatoire\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: connect ECONNREFUSED 127.0.0.1:3001\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Gestion des plannings bloc ...`\n    at <unknown> (http://localhost:3001/__cypress/runner/cypress_runner.js:133726:74)\n    at visitFailedByErr (http://localhost:3001/__cypress/runner/cypress_runner.js:133116:12)\n    at <unknown> (http://localhost:3001/__cypress/runner/cypress_runner.js:133725:11)\n    at tryCatcher (http://localhost:3001/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3001/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3001/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3001/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:3001/__cypress/runner/cypress_runner.js:1667:18)\n    at _drainQueueStep (http://localhost:3001/__cypress/runner/cypress_runner.js:2377:12)\n    at _drainQueue (http://localhost:3001/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (http://localhost:3001/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (http://localhost:3001/__cypress/runner/cypress_runner.js:2256:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://mathildanesth/./cypress/support/commands.ts:195:7)\n    at wrapped (http://localhost:3001/__cypress/runner/cypress_runner.js:140165:43)\n\nFrom Node.js Internals:\n  Error: connect ECONNREFUSED 127.0.0.1:3001\n      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1611:16)",
                    "diff": null
                  },
                  "uuid": "606056d6-b217-4530-aea9-e74967e4e788",
                  "parentUUID": "4a12482a-2c0b-4433-8cb0-803faccbe9cc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "permet de naviguer entre les semaines",
                  "fullTitle": "Gestion des plannings bloc opératoire Visualisation du planning permet de naviguer entre les semaines",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Noter la semaine actuelle\ncy.get('[data-testid=current-week-label]')\n    .invoke('text')\n    .then(function (currentWeek) {\n    // Aller à la semaine suivante\n    cy.get('[data-testid=next-week-button]').click();\n    // Vérifier que la semaine a changé\n    cy.get('[data-testid=current-week-label]')\n        .invoke('text')\n        .should('not.equal', currentWeek);\n    // Revenir à la semaine précédente\n    cy.get('[data-testid=prev-week-button]').click();\n    // Vérifier qu'on est revenu à la semaine initiale\n    cy.get('[data-testid=current-week-label]')\n        .invoke('text')\n        .should('equal', currentWeek);\n});",
                  "err": {},
                  "uuid": "0b97b70f-075a-43bb-b1be-2ce164e26bcf",
                  "parentUUID": "4a12482a-2c0b-4433-8cb0-803faccbe9cc",
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "permet de filtrer par secteur",
                  "fullTitle": "Gestion des plannings bloc opératoire Visualisation du planning permet de filtrer par secteur",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Sélectionner un secteur spécifique\ncy.get('[data-testid=sector-filter]').select('Chirurgie');\n// Vérifier que seules les salles du secteur sont affichées\ncy.get('[data-testid=operating-rooms-list]').within(function () {\n    cy.contains('Salle 1').should('exist');\n    cy.contains('Salle 2').should('exist');\n    cy.contains('Endoscopie').should('not.exist');\n});",
                  "err": {},
                  "uuid": "b0f6c3e8-4f0d-4f70-82ea-e13e199929ae",
                  "parentUUID": "4a12482a-2c0b-4433-8cb0-803faccbe9cc",
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "606056d6-b217-4530-aea9-e74967e4e788"
              ],
              "pending": [],
              "skipped": [
                "0b97b70f-075a-43bb-b1be-2ce164e26bcf",
                "b0f6c3e8-4f0d-4f70-82ea-e13e199929ae"
              ],
              "duration": 881,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4579ad95-2046-477a-b66e-3d998c172cf5",
              "title": "Création d'affectations",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "permet de créer une affectation par glisser-déposer",
                  "fullTitle": "Gestion des plannings bloc opératoire Création d'affectations permet de créer une affectation par glisser-déposer",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Sélectionner un chirurgien dans la liste\ncy.get('[data-testid=surgeons-list]')\n    .contains('Dr Dupont')\n    .as('surgeon');\n// Glisser-déposer sur un créneau\ncy.get('@surgeon').drag('[data-testid=slot-monday-morning-room1]');\n// Vérifier que l'affectation est créée\ncy.get('[data-testid=slot-monday-morning-room1]').within(function () {\n    cy.contains('Dr Dupont').should('exist');\n    cy.get('[data-testid=assignment-badge]').should('have.class', 'assigned');\n});\n// Vérifier la notification de succès\ncy.get('[data-testid=notification-success]')\n    .should('be.visible')\n    .and('contain', 'Affectation créée avec succès');",
                  "err": {},
                  "uuid": "cb204785-7d23-4580-a4f4-0212dbf9f341",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "permet de créer une affectation via le formulaire",
                  "fullTitle": "Gestion des plannings bloc opératoire Création d'affectations permet de créer une affectation via le formulaire",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Cliquer sur un créneau vide\ncy.get('[data-testid=slot-tuesday-afternoon-room2]').click();\n// Remplir le formulaire d'affectation\ncy.get('[data-testid=assignment-modal]').within(function () {\n    cy.get('[data-testid=surgeon-select]').select('Dr Martin');\n    cy.get('[data-testid=specialty-select]').select('Orthopédie');\n    cy.get('[data-testid=assignment-type]').select('Intervention');\n    cy.get('[data-testid=notes-input]').type('Prothèse de hanche');\n    cy.get('[data-testid=submit-assignment]').click();\n});\n// Vérifier que l'affectation est créée\ncy.get('[data-testid=slot-tuesday-afternoon-room2]').within(function () {\n    cy.contains('Dr Martin').should('exist');\n    cy.contains('Orthopédie').should('exist');\n});",
                  "err": {},
                  "uuid": "afe71c63-2083-45e0-b85e-653a728291e2",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "valide les règles métier lors de la création",
                  "fullTitle": "Gestion des plannings bloc opératoire Création d'affectations valide les règles métier lors de la création",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Essayer d'affecter un chirurgien déjà occupé\ncy.get('[data-testid=surgeons-list]')\n    .contains('Dr Dupont')\n    .drag('[data-testid=slot-monday-morning-room1]');\n// Essayer de l'affecter à nouveau au même moment\ncy.get('[data-testid=surgeons-list]')\n    .contains('Dr Dupont')\n    .drag('[data-testid=slot-monday-morning-room2]');\n// Vérifier l'avertissement de conflit\ncy.get('[data-testid=conflict-warning]')\n    .should('be.visible')\n    .and('contain', 'Dr Dupont est déjà affecté à ce créneau');",
                  "err": {},
                  "uuid": "088689f4-cda3-4d4a-a862-d7e762d4f158",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "vérifie les compétences pour les salles spécialisées",
                  "fullTitle": "Gestion des plannings bloc opératoire Création d'affectations vérifie les compétences pour les salles spécialisées",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Essayer d'affecter un chirurgien non qualifié en endoscopie\ncy.get('[data-testid=surgeons-list]')\n    .contains('Dr Orthopédiste')\n    .drag('[data-testid=slot-wednesday-morning-endoscopy]');\n// Vérifier l'avertissement de compétence\ncy.get('[data-testid=skill-warning]')\n    .should('be.visible')\n    .and('contain', 'Dr Orthopédiste n\\'est pas qualifié pour l\\'endoscopie');",
                  "err": {},
                  "uuid": "0c99ec82-fee4-4590-ab61-0df89791e93e",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "cb204785-7d23-4580-a4f4-0212dbf9f341",
                "afe71c63-2083-45e0-b85e-653a728291e2",
                "088689f4-cda3-4d4a-a862-d7e762d4f158",
                "0c99ec82-fee4-4590-ab61-0df89791e93e"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "0844ca62-c228-4992-847a-51fd3d5a58f9",
              "title": "Modification d'affectations",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "permet de modifier une affectation existante",
                  "fullTitle": "Gestion des plannings bloc opératoire Modification d'affectations permet de modifier une affectation existante",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Créer d'abord une affectation\ncy.get('[data-testid=surgeons-list]')\n    .contains('Dr Dupont')\n    .drag('[data-testid=slot-thursday-morning-room1]');\n// Double-cliquer pour modifier\ncy.get('[data-testid=slot-thursday-morning-room1]').dblclick();\n// Modifier les détails\ncy.get('[data-testid=assignment-modal]').within(function () {\n    cy.get('[data-testid=specialty-select]').select('Neurochirurgie');\n    cy.get('[data-testid=notes-input]').clear().type('Intervention modifiée');\n    cy.get('[data-testid=update-assignment]').click();\n});\n// Vérifier les modifications\ncy.get('[data-testid=slot-thursday-morning-room1]').within(function () {\n    cy.contains('Neurochirurgie').should('exist');\n});",
                  "err": {},
                  "uuid": "bdb70a10-1ffa-4cb7-91ce-7f1632ed59f8",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "permet de déplacer une affectation par glisser-déposer",
                  "fullTitle": "Gestion des plannings bloc opératoire Modification d'affectations permet de déplacer une affectation par glisser-déposer",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Créer une affectation\ncy.get('[data-testid=surgeons-list]')\n    .contains('Dr Martin')\n    .drag('[data-testid=slot-friday-morning-room1]');\n// Déplacer l'affectation vers un autre créneau\ncy.get('[data-testid=slot-friday-morning-room1]')\n    .find('[data-testid=assignment-badge]')\n    .drag('[data-testid=slot-friday-afternoon-room2]');\n// Vérifier le déplacement\ncy.get('[data-testid=slot-friday-morning-room1]')\n    .should('not.contain', 'Dr Martin');\ncy.get('[data-testid=slot-friday-afternoon-room2]')\n    .should('contain', 'Dr Martin');",
                  "err": {},
                  "uuid": "91b6b08e-7ba5-40e7-b650-4eb39d76111a",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "propose des créneaux alternatifs en cas de conflit",
                  "fullTitle": "Gestion des plannings bloc opératoire Modification d'affectations propose des créneaux alternatifs en cas de conflit",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Créer deux affectations\ncy.get('[data-testid=surgeons-list]')\n    .contains('Dr Dupont')\n    .drag('[data-testid=slot-monday-morning-room1]');\ncy.get('[data-testid=surgeons-list]')\n    .contains('Dr Martin')\n    .drag('[data-testid=slot-monday-morning-room2]');\n// Essayer de déplacer la première sur la seconde\ncy.get('[data-testid=slot-monday-morning-room1]')\n    .find('[data-testid=assignment-badge]')\n    .drag('[data-testid=slot-monday-morning-room2]');\n// Vérifier les suggestions\ncy.get('[data-testid=alternative-slots-modal]').within(function () {\n    cy.contains('Créneaux alternatifs disponibles').should('exist');\n    cy.get('[data-testid=alternative-slot]').should('have.length.greaterThan', 0);\n    // Choisir une alternative\n    cy.get('[data-testid=alternative-slot]').first().click();\n});",
                  "err": {},
                  "uuid": "ccab3885-094d-486e-b920-9afecf91102b",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "bdb70a10-1ffa-4cb7-91ce-7f1632ed59f8",
                "91b6b08e-7ba5-40e7-b650-4eb39d76111a",
                "ccab3885-094d-486e-b920-9afecf91102b"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "14b28200-79dd-4763-b80f-c714d84c9c82",
              "title": "Suppression d'affectations",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "permet de supprimer une affectation",
                  "fullTitle": "Gestion des plannings bloc opératoire Suppression d'affectations permet de supprimer une affectation",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Créer une affectation\ncy.get('[data-testid=surgeons-list]')\n    .contains('Dr Dupont')\n    .drag('[data-testid=slot-wednesday-morning-room1]');\n// Cliquer droit pour supprimer\ncy.get('[data-testid=slot-wednesday-morning-room1]')\n    .find('[data-testid=assignment-badge]')\n    .rightclick();\ncy.get('[data-testid=context-menu]')\n    .contains('Supprimer')\n    .click();\n// Confirmer la suppression\ncy.get('[data-testid=confirm-delete-modal]').within(function () {\n    cy.get('[data-testid=confirm-delete-button]').click();\n});\n// Vérifier la suppression\ncy.get('[data-testid=slot-wednesday-morning-room1]')\n    .should('not.contain', 'Dr Dupont');",
                  "err": {},
                  "uuid": "3d5854e6-75cc-4f7d-b646-d183094bc8cb",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "permet de supprimer plusieurs affectations en lot",
                  "fullTitle": "Gestion des plannings bloc opératoire Suppression d'affectations permet de supprimer plusieurs affectations en lot",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Créer plusieurs affectations\n['room1', 'room2', 'room3'].forEach(function (room, index) {\n    cy.get('[data-testid=surgeons-list]')\n        .contains(\"Dr Test\".concat(index + 1))\n        .drag(\"[data-testid=slot-thursday-morning-\".concat(room, \"]\"));\n});\n// Activer le mode sélection multiple\ncy.get('[data-testid=multi-select-toggle]').click();\n// Sélectionner plusieurs affectations\ncy.get('[data-testid^=slot-thursday-morning]')\n    .find('[data-testid=assignment-badge]')\n    .click({ multiple: true });\n// Supprimer en lot\ncy.get('[data-testid=bulk-delete-button]').click();\ncy.get('[data-testid=confirm-bulk-delete-button]').click();\n// Vérifier la suppression\n['room1', 'room2', 'room3'].forEach(function (room) {\n    cy.get(\"[data-testid=slot-thursday-morning-\".concat(room, \"]\"))\n        .should('be.empty');\n});",
                  "err": {},
                  "uuid": "779f9e21-33d2-4443-903a-ff687b47cab4",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "3d5854e6-75cc-4f7d-b646-d183094bc8cb",
                "779f9e21-33d2-4443-903a-ff687b47cab4"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "a2cbfad5-a03c-443f-bdb0-1b26d0e11f6e",
              "title": "Validation des règles métier",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "vérifie la règle de supervision pour les internes",
                  "fullTitle": "Gestion des plannings bloc opératoire Validation des règles métier vérifie la règle de supervision pour les internes",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Affecter un interne seul\ncy.get('[data-testid=surgeons-list]')\n    .contains('Interne Durand')\n    .drag('[data-testid=slot-monday-morning-room1]');\n// Vérifier l'avertissement de supervision\ncy.get('[data-testid=supervision-warning]')\n    .should('be.visible')\n    .and('contain', 'Un interne doit être supervisé par un senior');\n// Ajouter un senior\ncy.get('[data-testid=surgeons-list]')\n    .contains('Dr Senior')\n    .drag('[data-testid=slot-monday-morning-room1]');\n// Vérifier que l'avertissement disparaît\ncy.get('[data-testid=supervision-warning]').should('not.exist');",
                  "err": {},
                  "uuid": "45dafa64-39e4-4ced-b976-c07a84c35802",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "vérifie les temps de repos obligatoires",
                  "fullTitle": "Gestion des plannings bloc opératoire Validation des règles métier vérifie les temps de repos obligatoires",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Affecter un chirurgien en garde de nuit\ncy.get('[data-testid=surgeons-list]')\n    .contains('Dr Dupont')\n    .drag('[data-testid=slot-sunday-night-emergency]');\n// Essayer de l'affecter le lendemain matin\ncy.get('[data-testid=surgeons-list]')\n    .contains('Dr Dupont')\n    .drag('[data-testid=slot-monday-morning-room1]');\n// Vérifier l'avertissement de repos\ncy.get('[data-testid=rest-time-warning]')\n    .should('be.visible')\n    .and('contain', 'Temps de repos insuffisant après une garde');",
                  "err": {},
                  "uuid": "55858239-05e2-4902-b8ab-c10dfa1896ff",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "vérifie le nombre maximum d'heures hebdomadaires",
                  "fullTitle": "Gestion des plannings bloc opératoire Validation des règles métier vérifie le nombre maximum d'heures hebdomadaires",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Affecter un chirurgien sur de nombreux créneaux\nvar slots = [\n    'monday-morning', 'monday-afternoon',\n    'tuesday-morning', 'tuesday-afternoon',\n    'wednesday-morning', 'wednesday-afternoon',\n    'thursday-morning', 'thursday-afternoon',\n    'friday-morning', 'friday-afternoon'\n];\nslots.forEach(function (slot) {\n    cy.get('[data-testid=surgeons-list]')\n        .contains('Dr Workaholic')\n        .drag(\"[data-testid=slot-\".concat(slot, \"-room1]\"));\n});\n// Vérifier l'avertissement de dépassement d'heures\ncy.get('[data-testid=hours-limit-warning]')\n    .should('be.visible')\n    .and('contain', 'Limite d\\'heures hebdomadaires dépassée');",
                  "err": {},
                  "uuid": "337bd126-b074-4dcf-accf-dad07d660752",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [],
              "pending": [],
              "skipped": [
                "45dafa64-39e4-4ced-b976-c07a84c35802",
                "55858239-05e2-4902-b8ab-c10dfa1896ff",
                "337bd126-b074-4dcf-accf-dad07d660752"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "67ac15d5-532e-4ac3-901c-4c29c11d9ecd",
              "title": "Fonctionnalités avancées",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "permet de copier le planning d'une semaine",
                  "fullTitle": "Gestion des plannings bloc opératoire Fonctionnalités avancées permet de copier le planning d'une semaine",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Créer quelques affectations\ncy.get('[data-testid=surgeons-list]')\n    .contains('Dr Dupont')\n    .drag('[data-testid=slot-monday-morning-room1]');\ncy.get('[data-testid=surgeons-list]')\n    .contains('Dr Martin')\n    .drag('[data-testid=slot-tuesday-afternoon-room2]');\n// Copier le planning\ncy.get('[data-testid=planning-actions-menu]').click();\ncy.get('[data-testid=copy-week-planning]').click();\n// Aller à la semaine suivante\ncy.get('[data-testid=next-week-button]').click();\n// Coller le planning\ncy.get('[data-testid=planning-actions-menu]').click();\ncy.get('[data-testid=paste-week-planning]').click();\n// Vérifier que les affectations sont copiées\ncy.get('[data-testid=slot-monday-morning-room1]')\n    .should('contain', 'Dr Dupont');\ncy.get('[data-testid=slot-tuesday-afternoon-room2]')\n    .should('contain', 'Dr Martin');",
                  "err": {},
                  "uuid": "5fc9b3c6-a41f-4f4f-ae22-7d2f0250f78d",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "permet d'exporter le planning en PDF",
                  "fullTitle": "Gestion des plannings bloc opératoire Fonctionnalités avancées permet d'exporter le planning en PDF",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Ouvrir le menu d'export\ncy.get('[data-testid=export-planning-button]').click();\n// Configurer l'export\ncy.get('[data-testid=export-modal]').within(function () {\n    cy.get('[data-testid=export-format-pdf]').check();\n    cy.get('[data-testid=include-notes]').check();\n    cy.get('[data-testid=export-confirm]').click();\n});\n// Vérifier le téléchargement\ncy.readFile('cypress/downloads/planning-bloc-operatoire.pdf')\n    .should('exist');",
                  "err": {},
                  "uuid": "584130b6-5da9-471e-a67f-63100899ccf3",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "affiche les statistiques du planning",
                  "fullTitle": "Gestion des plannings bloc opératoire Fonctionnalités avancées affiche les statistiques du planning",
                  "timedOut": null,
                  "duration": 0,
                  "state": "skipped",
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Créer plusieurs affectations\n// ... (affectations créées)\n// Ouvrir les statistiques\ncy.get('[data-testid=planning-stats-button]').click();\n// Vérifier l'affichage des statistiques\ncy.get('[data-testid=stats-modal]').within(function () {\n    cy.contains('Taux d\\'occupation').should('exist');\n    cy.contains('Heures par chirurgien').should('exist');\n    cy.contains('Répartition par spécialité').should('exist');\n    cy.get('[data-testid=occupation-chart]').should('be.visible');\n});",
                  "err": {},
                  "uuid": "e4560a8f-3d59-43af-bf98-27ed2ce79048",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": true
                },
                {
                  "title": "permet de générer un planning automatique",
                  "fullTitle": "Gestion des plannings bloc opératoire Fonctionnalités avancées permet de générer un planning automatique",
                  "timedOut": null,
                  "duration": 0,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "// Ouvrir l'assistant de génération\ncy.get('[data-testid=auto-generate-button]').click();\n// Configurer les paramètres\ncy.get('[data-testid=generation-modal]').within(function () {\n    cy.get('[data-testid=respect-preferences]').check();\n    cy.get('[data-testid=balance-workload]').check();\n    cy.get('[data-testid=optimize-skills]').check();\n    cy.get('[data-testid=generate-planning]').click();\n});\n// Attendre la génération\ncy.get('[data-testid=generation-progress]').should('be.visible');\ncy.get('[data-testid=generation-complete]', { timeout: 30000 })\n    .should('be.visible');\n// Vérifier que des affectations ont été créées\ncy.get('[data-testid^=slot-]')\n    .find('[data-testid=assignment-badge]')\n    .should('have.length.greaterThan', 10);",
                  "err": {
                    "message": "CypressError: `cy.request()` failed trying to load:\n\nhttp://localhost:3001/__coverage__\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: connect ECONNREFUSED 127.0.0.1:3001\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: GET\nURL: http://localhost:3001/__coverage__\n\n-----------------------------------------------------------\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `after all` hook we are skipping all of the remaining tests.\n\nAlthough you have test retries enabled, we do not retry tests when `before all` or `after all` hooks fail",
                    "estack": "CypressError: `cy.request()` failed trying to load:\n\nhttp://localhost:3001/__coverage__\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: connect ECONNREFUSED 127.0.0.1:3001\n\n-----------------------------------------------------------\n\nThe request we sent was:\n\nMethod: GET\nURL: http://localhost:3001/__coverage__\n\n-----------------------------------------------------------\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer\n\nhttps://on.cypress.io/request\n\nBecause this error occurred during a `after all` hook we are skipping all of the remaining tests.\n\nAlthough you have test retries enabled, we do not retry tests when `before all` or `after all` hooks fail\n    at <unknown> (http://localhost:3001/__cypress/runner/cypress_runner.js:135025:70)\n    at tryCatcher (http://localhost:3001/__cypress/runner/cypress_runner.js:1777:23)\n    at <unknown> (http://localhost:3001/__cypress/runner/cypress_runner.js:4173:37)\n    at tryCatcher (http://localhost:3001/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3001/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3001/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3001/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:3001/__cypress/runner/cypress_runner.js:1667:18)\n    at _drainQueueStep (http://localhost:3001/__cypress/runner/cypress_runner.js:2377:12)\n    at _drainQueue (http://localhost:3001/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (http://localhost:3001/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (http://localhost:3001/__cypress/runner/cypress_runner.js:2256:14)\nFrom Your Spec Code:\n    at captureCoverage (webpack://mathildanesth/./node_modules/@cypress/code-coverage/support.js:203:0)\n    at Context.collectBackendCoverage (webpack://mathildanesth/./node_modules/@cypress/code-coverage/support.js:238:0)\n\nFrom Node.js Internals:\n  RequestError: Error: connect ECONNREFUSED 127.0.0.1:3001\n      at new r (<embedded>:227:431481)\n      at ee.callback (<embedded>:227:437482)\n      at e.callback.s.callback [as _callback] (<embedded>:227:436928)\n      at s._callback.s.callback.s.callback (<embedded>:290:105750)\n      at ee.emit (node:events:518:28)\n      at ee.onRequestError (<embedded>:290:114692)\n      at ClientRequest.emit (node:events:530:35)\n      at emitErrorEvent (node:_http_client:101:11)\n      at Socket.socketErrorListener (node:_http_client:504:5)\n      at Socket.emit (node:events:518:28)\n      at emitErrorNT (node:internal/streams/destroy:169:8)\n      at emitErrorCloseNT (node:internal/streams/destroy:128:3)\n      at process.processTicksAndRejections (node:internal/process/task_queues:82:21)",
                    "diff": null
                  },
                  "uuid": "44d9ba38-6c26-4691-945c-9cd6400dacff",
                  "parentUUID": null,
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "44d9ba38-6c26-4691-945c-9cd6400dacff"
              ],
              "pending": [],
              "skipped": [
                "5fc9b3c6-a41f-4f4f-ae22-7d2f0250f78d",
                "584130b6-5da9-471e-a67f-63100899ccf3",
                "e4560a8f-3d59-43af-bf98-27ed2ce79048"
              ],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}