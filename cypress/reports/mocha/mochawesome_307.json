{
  "stats": {
    "suites": 1,
    "tests": 8,
    "passes": 0,
    "pending": 0,
    "failures": 8,
    "start": "2025-05-15T13:00:52.960Z",
    "end": "2025-05-15T13:02:41.390Z",
    "duration": 108430,
    "testsRegistered": 8,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1483e985-4fa3-4e00-a736-167cddd2b9c5",
      "title": "",
      "fullFile": "cypress/e2e/edge-cases/error-handling.spec.ts",
      "file": "cypress/e2e/edge-cases/error-handling.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "dd5e67c6-2c33-45bd-861d-7e82c9112399",
          "title": "Gestion des erreurs et cas limites",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "gère correctement les erreurs de validation du formulaire de congés",
              "fullTitle": "Gestion des erreurs et cas limites gère correctement les erreurs de validation du formulaire de congés",
              "timedOut": null,
              "duration": 7998,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Se connecter\ncy.loginByApi(testUser.email, testUser.password);\n// Accéder à la page de demande de congés\ncy.visitAsAuthenticatedUser('/leaves/new');\n// Soumettre le formulaire sans remplir les champs obligatoires\ncy.get('[data-cy=submit-leave-request]').click();\n// Vérifier que les erreurs de validation s'affichent\ncy.get('[data-cy=validation-error]').should('have.length.at.least', 2);\ncy.get('[data-cy=type-validation-error]').should('be.visible');\ncy.get('[data-cy=dates-validation-error]').should('be.visible');\n// Remplir partiellement le formulaire\ncy.get('[data-cy=leave-type-select]').click();\ncy.get('[data-cy=leave-type-option-conges]').click();\n// Soumettre à nouveau\ncy.get('[data-cy=submit-leave-request]').click();\n// Vérifier que l'erreur sur le type a disparu mais que l'erreur sur les dates persiste\ncy.get('[data-cy=type-validation-error]').should('not.exist');\ncy.get('[data-cy=dates-validation-error]').should('be.visible');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=submit-leave-request]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=submit-leave-request]`, but never found it.\n    at Context.eval (webpack://mathildanesth/./cypress/e2e/edge-cases/error-handling.spec.ts:34:11)",
                "diff": null
              },
              "uuid": "d5811b7c-7836-43b8-b892-f8e53b88d4b3",
              "parentUUID": "dd5e67c6-2c33-45bd-861d-7e82c9112399",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "gère les erreurs de serveur lors de la soumission d'un formulaire",
              "fullTitle": "Gestion des erreurs et cas limites gère les erreurs de serveur lors de la soumission d'un formulaire",
              "timedOut": null,
              "duration": 6772,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Se connecter\ncy.loginByApi(testUser.email, testUser.password);\n// Accéder à la page de demande de congés\ncy.visitAsAuthenticatedUser('/leaves/new');\n// Remplir le formulaire\ncy.get('[data-cy=leave-type-select]').click();\ncy.get('[data-cy=leave-type-option-conges]').click();\nvar tomorrow = new Date();\ntomorrow.setDate(tomorrow.getDate() + 1);\nvar nextWeek = new Date();\nnextWeek.setDate(nextWeek.getDate() + 7);\ncy.selectDate('[data-cy=start-date-input]', tomorrow);\ncy.selectDate('[data-cy=end-date-input]', nextWeek);\n// Simuler une erreur serveur\ncy.intercept('POST', '**/api/leaves', {\n    statusCode: 500,\n    body: {\n        message: 'Erreur interne du serveur'\n    }\n}).as('serverError');\n// Soumettre le formulaire\ncy.get('[data-cy=submit-leave-request]').click();\n// Attendre la requête interceptée\ncy.wait('@serverError');\n// Vérifier que l'erreur est bien affichée\ncy.get('[data-cy=notification-error]')\n    .should('be.visible')\n    .and('contain', 'Erreur');\n// Vérifier que le formulaire est toujours affiché avec les données\ncy.get('[data-cy=leave-form]').should('be.visible');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=leave-type-select]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=leave-type-select]`, but never found it.\n    at Context.eval (webpack://mathildanesth/./cypress/e2e/edge-cases/error-handling.spec.ts:61:11)",
                "diff": null
              },
              "uuid": "1139e357-5d68-45f8-a4e2-fb57eb4c4d1c",
              "parentUUID": "dd5e67c6-2c33-45bd-861d-7e82c9112399",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "gère les problèmes de réseau lors des requêtes API",
              "fullTitle": "Gestion des erreurs et cas limites gère les problèmes de réseau lors des requêtes API",
              "timedOut": null,
              "duration": 30430,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Se connecter\ncy.loginByApi(testUser.email, testUser.password);\n// Accéder à la page des congés\ncy.visitAsAuthenticatedUser('/leaves');\n// Simuler une erreur réseau pour le chargement des congés\ncy.intercept('GET', '**/api/leaves**', {\n    forceNetworkError: true\n}).as('networkError');\n// Rafraîchir la page pour déclencher la requête\ncy.reload();\n// Vérifier que l'erreur réseau est bien gérée\ncy.get('[data-cy=network-error-message]')\n    .should('be.visible')\n    .and('contain', 'Erreur de connexion');\n// Vérifier qu'un bouton de réessai est disponible\ncy.get('[data-cy=retry-button]').should('be.visible');\n// Simuler le retour du réseau\ncy.intercept('GET', '**/api/leaves**').as('leavesRequest');\n// Cliquer sur le bouton de réessai\ncy.get('[data-cy=retry-button]').click();\n// Attendre la nouvelle requête\ncy.wait('@leavesRequest');\n// Vérifier que les données s'affichent\ncy.get('[data-cy=leave-list]').should('be.visible');",
              "err": {
                "message": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:3000/leaves\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: ESOCKETTIMEDOUT\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer",
                "estack": "CypressError: `cy.visit()` failed trying to load:\n\nhttp://localhost:3000/leaves\n\nWe attempted to make an http request to this URL but the request failed without a response.\n\nWe received this error at the network level:\n\n  > Error: ESOCKETTIMEDOUT\n\nCommon situations why this would fail:\n  - you don't have internet access\n  - you forgot to run / boot your web server\n  - your web server isn't accessible\n  - you have weird network configuration settings on your computer\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:133726:74)\n    at visitFailedByErr (http://localhost:3000/__cypress/runner/cypress_runner.js:133116:12)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:133725:11)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1667:18)\n    at _drainQueueStep (http://localhost:3000/__cypress/runner/cypress_runner.js:2377:12)\n    at _drainQueue (http://localhost:3000/__cypress/runner/cypress_runner.js:2370:9)\n    at Async._drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2386:5)\n    at Async.drainQueues (http://localhost:3000/__cypress/runner/cypress_runner.js:2256:14)\nFrom Your Spec Code:\n    at Context.eval (webpack://mathildanesth/./cypress/support/commands.ts:115:7)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:140165:43)\n\nFrom Node.js Internals:\n  Error: ESOCKETTIMEDOUT\n      at ClientRequest.<anonymous> (<embedded>:290:113952)\n      at Object.onceWrapper (node:events:632:28)\n      at ClientRequest.emit (node:events:518:28)\n      at Socket.emitRequestTimeout (node:_http_client:849:9)\n      at Object.onceWrapper (node:events:632:28)\n      at Socket.emit (node:events:530:35)\n      at Socket._onTimeout (node:net:595:8)\n      at listOnTimeout (node:internal/timers:581:17)\n      at process.processTimers (node:internal/timers:519:7)",
                "diff": null
              },
              "uuid": "632700b0-8637-4894-86fe-6f0267bbbc9c",
              "parentUUID": "dd5e67c6-2c33-45bd-861d-7e82c9112399",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "gère correctement la validation des dates de congés chevauchantes",
              "fullTitle": "Gestion des erreurs et cas limites gère correctement la validation des dates de congés chevauchantes",
              "timedOut": null,
              "duration": 18348,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Se connecter\ncy.loginByApi(testUser.email, testUser.password);\n// Accéder à la page de demande de congés\ncy.visitAsAuthenticatedUser('/leaves/new');\n// Remplir le formulaire avec des dates qui chevauchent un congé existant\ncy.get('[data-cy=leave-type-select]').click();\ncy.get('[data-cy=leave-type-option-conges]').click();\n// Utiliser les dates du congé déjà existant (d'après les fixtures)\nvar existingLeaveStart = new Date('2024-06-01T00:00:00.000Z');\nvar existingLeaveEnd = new Date('2024-06-14T23:59:59.999Z');\n// Choisir des dates qui chevauchent\nvar overlapStart = new Date('2024-06-10T00:00:00.000Z');\nvar overlapEnd = new Date('2024-06-20T00:00:00.000Z');\ncy.selectDate('[data-cy=start-date-input]', overlapStart);\ncy.selectDate('[data-cy=end-date-input]', overlapEnd);\n// Ajouter des notes\ncy.get('[data-cy=leave-notes]').type('Congés chevauchants');\n// Soumettre le formulaire\ncy.get('[data-cy=submit-leave-request]').click();\n// Vérifier l'affichage de l'avertissement de chevauchement\ncy.get('[data-cy=overlap-warning]')\n    .should('be.visible')\n    .and('contain', 'chevauchement');\n// Vérifier que des options sont proposées\ncy.get('[data-cy=continue-anyway-button]').should('be.visible');\ncy.get('[data-cy=modify-dates-button]').should('be.visible');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=leave-type-select]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=leave-type-select]`, but never found it.\n    at Context.eval (webpack://mathildanesth/./cypress/e2e/edge-cases/error-handling.spec.ts:140:11)",
                "diff": null
              },
              "uuid": "4de02223-43e6-4acb-b3c7-ba0512800a3f",
              "parentUUID": "dd5e67c6-2c33-45bd-861d-7e82c9112399",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "empêche la création de congés avec des dates invalides",
              "fullTitle": "Gestion des erreurs et cas limites empêche la création de congés avec des dates invalides",
              "timedOut": null,
              "duration": 5037,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Se connecter\ncy.loginByApi(testUser.email, testUser.password);\n// Accéder à la page de demande de congés\ncy.visitAsAuthenticatedUser('/leaves/new');\n// Remplir le formulaire avec une date de fin antérieure à la date de début\ncy.get('[data-cy=leave-type-select]').click();\ncy.get('[data-cy=leave-type-option-conges]').click();\nvar futureDate = new Date();\nfutureDate.setDate(futureDate.getDate() + 10);\nvar earlierDate = new Date();\nearlierDate.setDate(earlierDate.getDate() + 5);\ncy.selectDate('[data-cy=start-date-input]', futureDate);\ncy.selectDate('[data-cy=end-date-input]', earlierDate);\n// Vérifier que le message d'erreur sur les dates s'affiche\ncy.get('[data-cy=date-order-error]')\n    .should('be.visible')\n    .and('contain', 'La date de fin doit être postérieure à la date de début');\n// Vérifier que le bouton de soumission est désactivé\ncy.get('[data-cy=submit-leave-request]').should('be.disabled');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=leave-type-select]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=leave-type-select]`, but never found it.\n    at Context.eval (webpack://mathildanesth/./cypress/e2e/edge-cases/error-handling.spec.ts:178:11)",
                "diff": null
              },
              "uuid": "22527cfc-1f59-4665-8cba-35f35de96271",
              "parentUUID": "dd5e67c6-2c33-45bd-861d-7e82c9112399",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "gère correctement la session expirée",
              "fullTitle": "Gestion des erreurs et cas limites gère correctement la session expirée",
              "timedOut": null,
              "duration": 6852,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Se connecter\ncy.loginByApi(testUser.email, testUser.password);\n// Accéder à une page protégée\ncy.visitAsAuthenticatedUser('/leaves');\n// Simuler une expiration de session en modifiant le token\ncy.window().then(function (win) {\n    // Sauvegarder le token original pour restauration ultérieure\n    var originalToken = win.localStorage.getItem('authToken');\n    // Remplacer par un token invalide/expiré\n    win.localStorage.setItem('authToken', 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyLCJleHAiOjE1MTYyMzkwMjN9.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c');\n    // Simuler une erreur d'authentification pour la prochaine requête API\n    cy.intercept('GET', '**/api/leaves**', {\n        statusCode: 401,\n        body: {\n            message: 'Token expiré ou invalide'\n        }\n    }).as('authError');\n    // Déclencher une requête API\n    cy.reload();\n    // Attendre la requête interceptée\n    cy.wait('@authError');\n    // Vérifier la redirection vers la page de connexion\n    cy.url().should('include', '/auth/login');\n    // Vérifier l'affichage d'un message d'erreur\n    cy.get('[data-cy=notification-error]')\n        .should('be.visible')\n        .and('contain', 'Session expirée');\n    // Restaurer le token original pour ne pas affecter les tests suivants\n    cy.window().then(function (win) {\n        win.localStorage.setItem('authToken', originalToken);\n    });\n});",
              "err": {
                "message": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `authError`. No request ever occurred.\n\nhttps://on.cypress.io/wait",
                "estack": "CypressError: Timed out retrying after 5000ms: `cy.wait()` timed out waiting `5000ms` for the 1st request to the route: `authError`. No request ever occurred.\n\nhttps://on.cypress.io/wait\n    at cypressErr (http://localhost:3000/__cypress/runner/cypress_runner.js:76205:18)\n    at Object.errByPath (http://localhost:3000/__cypress/runner/cypress_runner.js:76259:10)\n    at checkForXhr (http://localhost:3000/__cypress/runner/cypress_runner.js:137464:84)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:137490:28)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at whenStable (http://localhost:3000/__cypress/runner/cypress_runner.js:145846:68)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:145787:14)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (http://localhost:3000/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (http://localhost:3000/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (http://localhost:3000/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (http://localhost:3000/__cypress/runner/cypress_runner.js:1671:18)\n    at Promise._fulfill (http://localhost:3000/__cypress/runner/cypress_runner.js:1615:18)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:5420:46)",
                "diff": null
              },
              "uuid": "4f393a7d-fae3-400e-a279-9aa16a60d409",
              "parentUUID": "dd5e67c6-2c33-45bd-861d-7e82c9112399",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "gère les accès non autorisés aux fonctionnalités d'administration",
              "fullTitle": "Gestion des erreurs et cas limites gère les accès non autorisés aux fonctionnalités d'administration",
              "timedOut": null,
              "duration": 16908,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Se connecter en tant qu'utilisateur standard\ncy.loginByApi(testUser.email, testUser.password);\n// Essayer d'accéder à une page d'administration\ncy.visitAsAuthenticatedUser('/admin/leaves');\n// Vérifier la redirection ou l'affichage d'un message d'erreur\ncy.get('[data-cy=access-denied-message]')\n    .should('be.visible')\n    .and('contain', 'Accès refusé');\n// Vérifier que les fonctionnalités d'administration ne sont pas accessibles\ncy.get('[data-cy=admin-functions]').should('not.exist');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=access-denied-message]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=access-denied-message]`, but never found it.\n    at Context.eval (webpack://mathildanesth/./cypress/e2e/edge-cases/error-handling.spec.ts:252:13)",
                "diff": null
              },
              "uuid": "9d2c8816-b8ae-4701-bd0f-3eca476c87eb",
              "parentUUID": "dd5e67c6-2c33-45bd-861d-7e82c9112399",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "gère correctement le cas d'un planning complet lors de l'ajout d'une nouvelle vacation",
              "fullTitle": "Gestion des erreurs et cas limites gère correctement le cas d'un planning complet lors de l'ajout d'une nouvelle vacation",
              "timedOut": null,
              "duration": 7429,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Se connecter en tant qu'administrateur\ncy.loginByApi(adminUser.email, adminUser.password);\n// Accéder à la page de planning\ncy.visitAsAuthenticatedUser('/planning/hebdomadaire');\n// Sélectionner une semaine\nvar nextMonday = new Date();\nvar day = nextMonday.getDay(); // 0 = dimanche, 1 = lundi, ...\nvar diff = day === 0 ? 1 : 8 - day; // Si dimanche, ajouter 1 jour, sinon ajouter 8 - jour actuel\nnextMonday.setDate(nextMonday.getDate() + diff);\ncy.selectDate('[data-cy=week-select]', nextMonday);\n// Simuler un planning complet\ncy.intercept('GET', '**/api/planning/availability**', {\n    statusCode: 200,\n    body: {\n        available: false,\n        message: 'Toutes les salles sont déjà réservées pour cette période'\n    }\n}).as('availabilityCheck');\n// Essayer d'ajouter une nouvelle vacation\ncy.get('[data-cy=add-assignment-button]').click();\n// Vérifier l'affichage d'un message indiquant que le planning est complet\ncy.get('[data-cy=planning-full-message]')\n    .should('be.visible')\n    .and('contain', 'Toutes les salles sont déjà réservées');\n// Vérifier qu'il n'est pas possible d'ajouter une nouvelle vacation\ncy.get('[data-cy=assignment-modal]').should('not.exist');",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=week-select]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[data-cy=week-select]`, but never found it.\n    at Context.eval (webpack://mathildanesth/./cypress/support/commands.ts:146:7)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:140165:43)",
                "diff": null
              },
              "uuid": "b526a8e2-db2a-4637-994c-f27fe40fe402",
              "parentUUID": "dd5e67c6-2c33-45bd-861d-7e82c9112399",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d5811b7c-7836-43b8-b892-f8e53b88d4b3",
            "1139e357-5d68-45f8-a4e2-fb57eb4c4d1c",
            "632700b0-8637-4894-86fe-6f0267bbbc9c",
            "4de02223-43e6-4acb-b3c7-ba0512800a3f",
            "22527cfc-1f59-4665-8cba-35f35de96271",
            "4f393a7d-fae3-400e-a279-9aa16a60d409",
            "9d2c8816-b8ae-4701-bd0f-3eca476c87eb",
            "b526a8e2-db2a-4637-994c-f27fe40fe402"
          ],
          "pending": [],
          "skipped": [],
          "duration": 99774,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}