{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 0,
    "pending": 0,
    "failures": 7,
    "start": "2025-05-04T19:21:42.369Z",
    "end": "2025-05-04T19:24:19.320Z",
    "duration": 156951,
    "testsRegistered": 7,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a41cf039-ca9c-489b-98e9-af38eadbbf93",
      "title": "",
      "fullFile": "cypress/e2e/planning/planning-management.spec.ts",
      "file": "cypress/e2e/planning/planning-management.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "e8d195cb-ff95-4db3-949c-66bc2339b438",
          "title": "Gestion des plannings",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "permet de générer un planning hebdomadaire",
              "fullTitle": "Gestion des plannings permet de générer un planning hebdomadaire",
              "timedOut": null,
              "duration": 23869,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Accéder à la page de génération de planning\ncy.visitAsAuthenticatedUser('/planning/generator');\n// Sélectionner la semaine\nvar nextMonday = getNextMonday();\ncy.selectDate('[data-cy=week-start-date]', nextMonday);\n// Sélectionner un secteur opératoire\ncy.get('[data-cy=sector-select]').click();\ncy.get('[data-cy=sector-option-1]').click();\n// Définir les paramètres de génération\ncy.get('[data-cy=include-weekends]').click(); // Désactiver les weekends\ncy.get('[data-cy=respect-preferences]').click(); // Activer le respect des préférences\ncy.get('[data-cy=balance-workload]').click(); // Activer l'équilibrage de charge\n// Intercepter la requête de génération\ncy.intercept('POST', '**/api/planning/generate').as('generatePlanning');\n// Lancer la génération\ncy.get('[data-cy=generate-planning-button]').click();\n// Attendre la réponse de l'API\ncy.wait('@generatePlanning').its('response.statusCode').should('eq', 200);\n// Vérifier le message de succès\ncy.get('[data-cy=notification-success]')\n    .should('be.visible')\n    .and('contain', 'Planning généré avec succès');\n// Vérifier que le planning a été généré et redirige vers la vue du planning\ncy.url().should('include', '/planning/hebdomadaire');\ncy.get('[data-cy=planning-table]').should('be.visible');\ncy.get('[data-cy=planning-slot]').should('have.length.at.least', 5); // Au moins 5 créneaux (un par jour)",
              "err": {
                "message": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `[data-cy=main-content]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `[data-cy=main-content]`, but never found it.\n    at Context.eval (webpack://mathildanesth/./cypress/support/commands.ts:136:57)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:140147:43)",
                "diff": null
              },
              "uuid": "3d1109e0-a541-4036-ac24-ae3f2c44a0fa",
              "parentUUID": "e8d195cb-ff95-4db3-949c-66bc2339b438",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "permet de modifier manuellement un planning",
              "fullTitle": "Gestion des plannings permet de modifier manuellement un planning",
              "timedOut": null,
              "duration": 21999,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Accéder à la page de planning hebdomadaire\ncy.visitAsAuthenticatedUser('/planning/hebdomadaire');\n// Sélectionner une semaine\nvar nextMonday = getNextMonday();\ncy.selectDate('[data-cy=week-select]', nextMonday);\n// Cliquer sur un créneau vide pour l'éditer\ncy.get('[data-cy=planning-slot]:not(.occupied)').first().click();\n// Vérifier que le modal d'édition s'ouvre\ncy.get('[data-cy=assignment-modal]').should('be.visible');\n// Sélectionner un chirurgien\ncy.get('[data-cy=surgeon-select]').click();\ncy.get('[data-cy=surgeon-option]').first().click();\n// Sélectionner un MAR (Médecin Anesthésiste Réanimateur)\ncy.get('[data-cy=mar-select]').click();\ncy.get('[data-cy=mar-option]').first().click();\n// Ajouter un IADE (optionnel)\ncy.get('[data-cy=add-iade-checkbox]').click();\ncy.get('[data-cy=iade-select]').click();\ncy.get('[data-cy=iade-option]').first().click();\n// Définir le type d'intervention\ncy.get('[data-cy=assignment-type-select]').click();\ncy.get('[data-cy=assignment-type-option-standard]').click();\n// Ajouter des notes\ncy.get('[data-cy=assignment-notes]').type('Intervention programmée manuellement');\n// Intercepter la requête de création\ncy.intercept('POST', '**/api/planning/affectations').as('createAssignment');\n// Enregistrer l'assignation\ncy.get('[data-cy=save-assignment-button]').click();\n// Attendre la réponse de l'API\ncy.wait('@createAssignment').its('response.statusCode').should('eq', 201);\n// Vérifier le message de succès\ncy.get('[data-cy=notification-success]')\n    .should('be.visible')\n    .and('contain', 'Assignation créée');\n// Vérifier que le créneau est maintenant occupé\ncy.get('[data-cy=planning-slot].occupied').should('be.visible');",
              "err": {
                "message": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `[data-cy=main-content]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `[data-cy=main-content]`, but never found it.\n    at Context.eval (webpack://mathildanesth/./cypress/support/commands.ts:136:57)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:140147:43)",
                "diff": null
              },
              "uuid": "a4f2cec2-f37a-469b-972e-a1da84f2697f",
              "parentUUID": "e8d195cb-ff95-4db3-949c-66bc2339b438",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "permet de modifier une assignation existante",
              "fullTitle": "Gestion des plannings permet de modifier une assignation existante",
              "timedOut": null,
              "duration": 21988,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Créer d'abord une assignation pour pouvoir la modifier\n// Pour simplifier le test, nous supposons qu'une assignation existe déjà\n// Accéder à la page de planning hebdomadaire\ncy.visitAsAuthenticatedUser('/planning/hebdomadaire');\n// Sélectionner une semaine\nvar nextMonday = getNextMonday();\ncy.selectDate('[data-cy=week-select]', nextMonday);\n// Créer une assignation pour le test\ncreateTestAssignment();\n// Cliquer sur l'assignation existante\ncy.get('[data-cy=planning-slot].occupied').first().click();\n// Vérifier que le modal d'édition s'ouvre\ncy.get('[data-cy=assignment-modal]').should('be.visible');\n// Modifier les notes\ncy.get('[data-cy=assignment-notes]').clear().type('Intervention modifiée');\n// Intercepter la requête de mise à jour\ncy.intercept('PUT', '**/api/planning/affectations/**').as('updateAssignment');\n// Enregistrer les modifications\ncy.get('[data-cy=save-assignment-button]').click();\n// Attendre la réponse de l'API\ncy.wait('@updateAssignment').its('response.statusCode').should('eq', 200);\n// Vérifier le message de succès\ncy.get('[data-cy=notification-success]')\n    .should('be.visible')\n    .and('contain', 'Assignation mise à jour');",
              "err": {
                "message": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `[data-cy=main-content]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `[data-cy=main-content]`, but never found it.\n    at Context.eval (webpack://mathildanesth/./cypress/support/commands.ts:136:57)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:140147:43)",
                "diff": null
              },
              "uuid": "405f7b87-6155-44ad-81d4-43c8b15d0763",
              "parentUUID": "e8d195cb-ff95-4db3-949c-66bc2339b438",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "permet de supprimer une assignation",
              "fullTitle": "Gestion des plannings permet de supprimer une assignation",
              "timedOut": null,
              "duration": 21991,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Accéder à la page de planning hebdomadaire\ncy.visitAsAuthenticatedUser('/planning/hebdomadaire');\n// Sélectionner une semaine\nvar nextMonday = getNextMonday();\ncy.selectDate('[data-cy=week-select]', nextMonday);\n// Créer une assignation pour le test\ncreateTestAssignment();\n// Cliquer sur l'assignation existante\ncy.get('[data-cy=planning-slot].occupied').first().click();\n// Vérifier que le modal d'édition s'ouvre\ncy.get('[data-cy=assignment-modal]').should('be.visible');\n// Intercepter la requête de suppression\ncy.intercept('DELETE', '**/api/planning/affectations/**').as('deleteAssignment');\n// Cliquer sur le bouton de suppression\ncy.get('[data-cy=delete-assignment-button]').click();\n// Confirmer la suppression\ncy.get('[data-cy=confirm-delete-button]').click();\n// Attendre la réponse de l'API\ncy.wait('@deleteAssignment').its('response.statusCode').should('eq', 200);\n// Vérifier le message de succès\ncy.get('[data-cy=notification-success]')\n    .should('be.visible')\n    .and('contain', 'Assignation supprimée');\n// Vérifier que le créneau est maintenant vide\ncy.get('[data-cy=planning-slot].occupied').should('not.exist');",
              "err": {
                "message": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `[data-cy=main-content]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `[data-cy=main-content]`, but never found it.\n    at Context.eval (webpack://mathildanesth/./cypress/support/commands.ts:136:57)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:140147:43)",
                "diff": null
              },
              "uuid": "19ee7d51-7e48-445a-bb61-fa6b77451e8e",
              "parentUUID": "e8d195cb-ff95-4db3-949c-66bc2339b438",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "permet de publier un planning",
              "fullTitle": "Gestion des plannings permet de publier un planning",
              "timedOut": null,
              "duration": 22068,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Accéder à la page de planning hebdomadaire\ncy.visitAsAuthenticatedUser('/planning/hebdomadaire');\n// Sélectionner une semaine\nvar nextMonday = getNextMonday();\ncy.selectDate('[data-cy=week-select]', nextMonday);\n// Créer quelques assignations pour le test\ncreateTestAssignment();\n// Intercepter la requête de publication\ncy.intercept('POST', '**/api/planning/publish').as('publishPlanning');\n// Cliquer sur le bouton de publication\ncy.get('[data-cy=publish-planning-button]').click();\n// Confirmer la publication\ncy.get('[data-cy=confirm-publish-button]').click();\n// Attendre la réponse de l'API\ncy.wait('@publishPlanning').its('response.statusCode').should('eq', 200);\n// Vérifier le message de succès\ncy.get('[data-cy=notification-success]')\n    .should('be.visible')\n    .and('contain', 'Planning publié');\n// Vérifier que le planning est marqué comme publié\ncy.get('[data-cy=published-badge]').should('be.visible');",
              "err": {
                "message": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `[data-cy=main-content]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `[data-cy=main-content]`, but never found it.\n    at Context.eval (webpack://mathildanesth/./cypress/support/commands.ts:136:57)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:140147:43)",
                "diff": null
              },
              "uuid": "22e74d86-5e82-48ad-a362-550279ee57ac",
              "parentUUID": "e8d195cb-ff95-4db3-949c-66bc2339b438",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "permet de détecter les conflits lors de la génération d'un planning",
              "fullTitle": "Gestion des plannings permet de détecter les conflits lors de la génération d'un planning",
              "timedOut": null,
              "duration": 22467,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Accéder à la page de génération de planning\ncy.visitAsAuthenticatedUser('/planning/generator');\n// Sélectionner la semaine\nvar nextMonday = getNextMonday();\ncy.selectDate('[data-cy=week-start-date]', nextMonday);\n// Sélectionner un secteur opératoire\ncy.get('[data-cy=sector-select]').click();\ncy.get('[data-cy=sector-option-1]').click();\n// Activer la détection de conflits stricte\ncy.get('[data-cy=strict-conflict-detection]').click();\n// Simuler un conflit (par exemple, en créant manuellement une absence pour un médecin)\ncreateConflictingLeave();\n// Intercepter la requête de génération\ncy.intercept('POST', '**/api/planning/generate').as('generatePlanning');\n// Lancer la génération\ncy.get('[data-cy=generate-planning-button]').click();\n// Attendre la réponse de l'API\ncy.wait('@generatePlanning');\n// Vérifier l'affichage des conflits\ncy.get('[data-cy=conflicts-modal]').should('be.visible');\ncy.get('[data-cy=conflict-item]').should('have.length.at.least', 1);\n// Résoudre les conflits en ignorant\ncy.get('[data-cy=ignore-conflicts-button]').click();\n// Vérifier que le planning est généré malgré les conflits\ncy.url().should('include', '/planning/hebdomadaire');\ncy.get('[data-cy=planning-table]').should('be.visible');",
              "err": {
                "message": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `[data-cy=main-content]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `[data-cy=main-content]`, but never found it.\n    at Context.eval (webpack://mathildanesth/./cypress/support/commands.ts:136:57)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:140147:43)",
                "diff": null
              },
              "uuid": "96d13e91-3221-401b-b21f-f1c28fae9716",
              "parentUUID": "e8d195cb-ff95-4db3-949c-66bc2339b438",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "permet aux utilisateurs standards de visualiser leur planning",
              "fullTitle": "Gestion des plannings permet aux utilisateurs standards de visualiser leur planning",
              "timedOut": null,
              "duration": 22217,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Se connecter en tant qu'utilisateur standard (e.g., MAR)\ncy.loginByApi('mar@example.com', 'Test123!');\ncy.visitAsAuthenticatedUser('/planning/hebdomadaire');\n// Vérifier que le planning est visible mais que les contrôles admin sont absents\ncy.get('[data-cy=weekly-planning-view]').should('be.visible');\ncy.get('[data-cy=generate-planning-button]').should('not.exist');\ncy.get('[data-cy=publish-planning-button]').should('not.exist');\n// Optionnel: vérifier des éléments spécifiques au rôle USER\ncy.contains('Mon Planning');\n// Déconnexion (si un bouton existe)\n// cy.get('[data-cy=logout-button]').click();\n// Ou via une route API si pas de bouton\n// cy.visit('/auth/deconnexion'); // Chemin incorrect\ncy.request('/api/auth/deconnexion'); // Utiliser cy.request pour appeler l'API de déconnexion\ncy.url().should('include', '/auth/connexion'); // Vérifier la redirection vers login après logout",
              "err": {
                "message": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `[data-cy=main-content]`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 20000ms: Expected to find element: `[data-cy=main-content]`, but never found it.\n    at Context.eval (webpack://mathildanesth/./cypress/support/commands.ts:136:57)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:140147:43)",
                "diff": null
              },
              "uuid": "e92d445d-f9a3-43f6-b636-6946e2d5de1c",
              "parentUUID": "e8d195cb-ff95-4db3-949c-66bc2339b438",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3d1109e0-a541-4036-ac24-ae3f2c44a0fa",
            "a4f2cec2-f37a-469b-972e-a1da84f2697f",
            "405f7b87-6155-44ad-81d4-43c8b15d0763",
            "19ee7d51-7e48-445a-bb61-fa6b77451e8e",
            "22e74d86-5e82-48ad-a362-550279ee57ac",
            "96d13e91-3221-401b-b21f-f1c28fae9716",
            "e92d445d-f9a3-43f6-b636-6946e2d5de1c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 156599,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}