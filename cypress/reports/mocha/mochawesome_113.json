{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2025-05-04T17:27:28.835Z",
    "end": "2025-05-04T17:27:29.453Z",
    "duration": 618,
    "testsRegistered": 7,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 6,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "5c178683-1dbd-4239-8d55-72e78b6bf134",
      "title": "",
      "fullFile": "cypress/e2e/planning/planning-management.spec.ts",
      "file": "cypress/e2e/planning/planning-management.spec.ts",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4d588883-a7a5-4873-852a-0c60ca7132c3",
          "title": "Gestion des plannings",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "permet de générer un planning hebdomadaire",
              "fullTitle": "Gestion des plannings permet de générer un planning hebdomadaire",
              "timedOut": null,
              "duration": 375,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Accéder à la page de génération de planning\ncy.visitAsAuthenticatedUser('/planning/generator');\n// Sélectionner la semaine\nvar nextMonday = getNextMonday();\ncy.selectDate('[data-cy=week-start-date]', nextMonday);\n// Sélectionner un secteur opératoire\ncy.get('[data-cy=sector-select]').click();\ncy.get('[data-cy=sector-option-1]').click();\n// Définir les paramètres de génération\ncy.get('[data-cy=include-weekends]').click(); // Désactiver les weekends\ncy.get('[data-cy=respect-preferences]').click(); // Activer le respect des préférences\ncy.get('[data-cy=balance-workload]').click(); // Activer l'équilibrage de charge\n// Intercepter la requête de génération\ncy.intercept('POST', '**/api/planning/generate').as('generatePlanning');\n// Lancer la génération\ncy.get('[data-cy=generate-planning-button]').click();\n// Attendre la réponse de l'API\ncy.wait('@generatePlanning').its('response.statusCode').should('eq', 200);\n// Vérifier le message de succès\ncy.get('[data-cy=notification-success]')\n    .should('be.visible')\n    .and('contain', 'Planning généré avec succès');\n// Vérifier que le planning a été généré et redirige vers la vue du planning\ncy.url().should('include', '/planning/hebdomadaire');\ncy.get('[data-cy=planning-table]').should('be.visible');\ncy.get('[data-cy=planning-slot]').should('have.length.at.least', 5); // Au moins 5 créneaux (un par jour)",
              "err": {
                "message": "Error: Échec d'authentification: 500 \"<!DOCTYPE html><html><head><style data-next-hide-fouc=\\\"true\\\">body{display:none}</style><noscript data-next-hide-fouc=\\\"true\\\"><style>body{display:block}</style></noscript><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills.js?ts=1746379649211\\\"></script><script src=\\\"/_next/static/chunks/fallback/webpack.js?ts=1746379649211\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/fallback/main.js?ts=1746379649211\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/fallback/pages/_app.js?ts=1746379649211\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/fallback/pages/_error.js?ts=1746379649211\\\" defer=\\\"\\\"></script><noscript id=\\\"__next_css__DO_NOT_USE__\\\"></noscript></head><body><div id=\\\"__next\\\"></div><script src=\\\"/_next/static/chunks/fallback/react-refresh.js?ts=1746379649211\\\"></script><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{\\\"statusCode\\\":500}},\\\"page\\\":\\\"/_error\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"development\\\",\\\"isFallback\\\":false,\\\"err\\\":{\\\"name\\\":\\\"Error\\\",\\\"source\\\":\\\"server\\\",\\\"message\\\":\\\"Module not found: Can't resolve 'fs'\\\\n\\\\nhttps://nextjs.org/docs/messages/module-not-found\\\\n\\\\nImport trace for requested module:\\\\n./node_modules/winston/dist/winston/transports/file.js\\\\n./node_modules/winston/dist/winston/transports/index.js\\\\n./node_modules/winston/dist/winston.js\\\\n./src/utils/logger.ts\\\\n./src/modules/leaves/hooks/useLeaveCalculation.ts\\\\n./src/modules/leaves/components/LeaveForm.tsx\\\\n./src/app/leaves/page.tsx\\\",\\\"stack\\\":\\\"Error: \\\\u001b[31m\\\\u001b[1mModule not found\\\\u001b[22m\\\\u001b[39m: Can't resolve '\\\\u001b[32mfs\\\\u001b[39m'\\\\n\\\\nhttps://nextjs.org/docs/messages/module-not-found\\\\n\\\\nImport trace for requested module:\\\\n./node_modules/winston/dist/winston/transports/file.js\\\\n./node_modules/winston/dist/winston/transports/index.js\\\\n./node_modules/winston/dist/winston.js\\\\n./src/utils/logger.ts\\\\n./src/modules/leaves/hooks/useLeaveCalculation.ts\\\\n./src/modules/leaves/components/LeaveForm.tsx\\\\n./src/app/leaves/page.tsx\\\\n    at getNotFoundError (/Users/vincentperreard/Mathildanesth/node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/parseNotFoundError.js:120:16)\\\\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\\\\n    at async getModuleBuildError (/Users/vincentperreard/Mathildanesth/node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/webpackModuleError.js:102:27)\\\\n    at async /Users/vincentperreard/Mathildanesth/node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/index.js:21:49\\\\n    at async Promise.all (index 0)\\\\n    at async /Users/vincentperreard/Mathildanesth/node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/index.js:19:21\\\"},\\\"gip\\\":true,\\\"scriptLoader\\\":[]}</script></body></html>\"\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Gestion des plannings`",
                "estack": "Error: Échec d'authentification: 500 \"<!DOCTYPE html><html><head><style data-next-hide-fouc=\\\"true\\\">body{display:none}</style><noscript data-next-hide-fouc=\\\"true\\\"><style>body{display:block}</style></noscript><meta charSet=\\\"utf-8\\\"/><meta name=\\\"viewport\\\" content=\\\"width=device-width\\\"/><meta name=\\\"next-head-count\\\" content=\\\"2\\\"/><noscript data-n-css=\\\"\\\"></noscript><script defer=\\\"\\\" nomodule=\\\"\\\" src=\\\"/_next/static/chunks/polyfills.js?ts=1746379649211\\\"></script><script src=\\\"/_next/static/chunks/fallback/webpack.js?ts=1746379649211\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/fallback/main.js?ts=1746379649211\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/fallback/pages/_app.js?ts=1746379649211\\\" defer=\\\"\\\"></script><script src=\\\"/_next/static/chunks/fallback/pages/_error.js?ts=1746379649211\\\" defer=\\\"\\\"></script><noscript id=\\\"__next_css__DO_NOT_USE__\\\"></noscript></head><body><div id=\\\"__next\\\"></div><script src=\\\"/_next/static/chunks/fallback/react-refresh.js?ts=1746379649211\\\"></script><script id=\\\"__NEXT_DATA__\\\" type=\\\"application/json\\\">{\\\"props\\\":{\\\"pageProps\\\":{\\\"statusCode\\\":500}},\\\"page\\\":\\\"/_error\\\",\\\"query\\\":{},\\\"buildId\\\":\\\"development\\\",\\\"isFallback\\\":false,\\\"err\\\":{\\\"name\\\":\\\"Error\\\",\\\"source\\\":\\\"server\\\",\\\"message\\\":\\\"Module not found: Can't resolve 'fs'\\\\n\\\\nhttps://nextjs.org/docs/messages/module-not-found\\\\n\\\\nImport trace for requested module:\\\\n./node_modules/winston/dist/winston/transports/file.js\\\\n./node_modules/winston/dist/winston/transports/index.js\\\\n./node_modules/winston/dist/winston.js\\\\n./src/utils/logger.ts\\\\n./src/modules/leaves/hooks/useLeaveCalculation.ts\\\\n./src/modules/leaves/components/LeaveForm.tsx\\\\n./src/app/leaves/page.tsx\\\",\\\"stack\\\":\\\"Error: \\\\u001b[31m\\\\u001b[1mModule not found\\\\u001b[22m\\\\u001b[39m: Can't resolve '\\\\u001b[32mfs\\\\u001b[39m'\\\\n\\\\nhttps://nextjs.org/docs/messages/module-not-found\\\\n\\\\nImport trace for requested module:\\\\n./node_modules/winston/dist/winston/transports/file.js\\\\n./node_modules/winston/dist/winston/transports/index.js\\\\n./node_modules/winston/dist/winston.js\\\\n./src/utils/logger.ts\\\\n./src/modules/leaves/hooks/useLeaveCalculation.ts\\\\n./src/modules/leaves/components/LeaveForm.tsx\\\\n./src/app/leaves/page.tsx\\\\n    at getNotFoundError (/Users/vincentperreard/Mathildanesth/node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/parseNotFoundError.js:120:16)\\\\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\\\\n    at async getModuleBuildError (/Users/vincentperreard/Mathildanesth/node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/webpackModuleError.js:102:27)\\\\n    at async /Users/vincentperreard/Mathildanesth/node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/index.js:21:49\\\\n    at async Promise.all (index 0)\\\\n    at async /Users/vincentperreard/Mathildanesth/node_modules/next/dist/build/webpack/plugins/wellknown-errors-plugin/index.js:19:21\\\"},\\\"gip\\\":true,\\\"scriptLoader\\\":[]}</script></body></html>\"\n\nBecause this error occurred during a `before each` hook we are skipping the remaining tests in the current suite: `Gestion des plannings`\n    at Context.eval (webpack://mathildanesth/./cypress/support/commands.ts:97:18)\n    at getRet (http://localhost:3000/__cypress/runner/cypress_runner.js:119616:20)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (http://localhost:3000/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (http://localhost:3000/__cypress/runner/cypress_runner.js:119627:66)\n    at Context.then (http://localhost:3000/__cypress/runner/cypress_runner.js:119878:21)\n    at wrapped (http://localhost:3000/__cypress/runner/cypress_runner.js:140155:19)\n    at <unknown> (http://localhost:3000/__cypress/runner/cypress_runner.js:146100:15)\n    at tryCatcher (http://localhost:3000/__cypress/runner/cypress_runner.js:1777:23)",
                "diff": null
              },
              "uuid": "3fabfd6b-630f-4a71-b876-e38e5cf8d52e",
              "parentUUID": "4d588883-a7a5-4873-852a-0c60ca7132c3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "permet de modifier manuellement un planning",
              "fullTitle": "Gestion des plannings permet de modifier manuellement un planning",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Accéder à la page de planning hebdomadaire\ncy.visitAsAuthenticatedUser('/planning/hebdomadaire');\n// Sélectionner une semaine\nvar nextMonday = getNextMonday();\ncy.selectDate('[data-cy=week-select]', nextMonday);\n// Cliquer sur un créneau vide pour l'éditer\ncy.get('[data-cy=planning-slot]:not(.occupied)').first().click();\n// Vérifier que le modal d'édition s'ouvre\ncy.get('[data-cy=assignment-modal]').should('be.visible');\n// Sélectionner un chirurgien\ncy.get('[data-cy=surgeon-select]').click();\ncy.get('[data-cy=surgeon-option]').first().click();\n// Sélectionner un MAR (Médecin Anesthésiste Réanimateur)\ncy.get('[data-cy=mar-select]').click();\ncy.get('[data-cy=mar-option]').first().click();\n// Ajouter un IADE (optionnel)\ncy.get('[data-cy=add-iade-checkbox]').click();\ncy.get('[data-cy=iade-select]').click();\ncy.get('[data-cy=iade-option]').first().click();\n// Définir le type d'intervention\ncy.get('[data-cy=assignment-type-select]').click();\ncy.get('[data-cy=assignment-type-option-standard]').click();\n// Ajouter des notes\ncy.get('[data-cy=assignment-notes]').type('Intervention programmée manuellement');\n// Intercepter la requête de création\ncy.intercept('POST', '**/api/planning/assignments').as('createAssignment');\n// Enregistrer l'assignation\ncy.get('[data-cy=save-assignment-button]').click();\n// Attendre la réponse de l'API\ncy.wait('@createAssignment').its('response.statusCode').should('eq', 201);\n// Vérifier le message de succès\ncy.get('[data-cy=notification-success]')\n    .should('be.visible')\n    .and('contain', 'Assignation créée');\n// Vérifier que le créneau est maintenant occupé\ncy.get('[data-cy=planning-slot].occupied').should('be.visible');",
              "err": {},
              "uuid": "b097d786-efdc-4686-b931-96e857441565",
              "parentUUID": "4d588883-a7a5-4873-852a-0c60ca7132c3",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "permet de modifier une assignation existante",
              "fullTitle": "Gestion des plannings permet de modifier une assignation existante",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Créer d'abord une assignation pour pouvoir la modifier\n// Pour simplifier le test, nous supposons qu'une assignation existe déjà\n// Accéder à la page de planning hebdomadaire\ncy.visitAsAuthenticatedUser('/planning/hebdomadaire');\n// Sélectionner une semaine\nvar nextMonday = getNextMonday();\ncy.selectDate('[data-cy=week-select]', nextMonday);\n// Créer une assignation pour le test\ncreateTestAssignment();\n// Cliquer sur l'assignation existante\ncy.get('[data-cy=planning-slot].occupied').first().click();\n// Vérifier que le modal d'édition s'ouvre\ncy.get('[data-cy=assignment-modal]').should('be.visible');\n// Modifier les notes\ncy.get('[data-cy=assignment-notes]').clear().type('Intervention modifiée');\n// Intercepter la requête de mise à jour\ncy.intercept('PUT', '**/api/planning/assignments/**').as('updateAssignment');\n// Enregistrer les modifications\ncy.get('[data-cy=save-assignment-button]').click();\n// Attendre la réponse de l'API\ncy.wait('@updateAssignment').its('response.statusCode').should('eq', 200);\n// Vérifier le message de succès\ncy.get('[data-cy=notification-success]')\n    .should('be.visible')\n    .and('contain', 'Assignation mise à jour');",
              "err": {},
              "uuid": "e88cac33-5f66-45e1-baa9-168c5346162c",
              "parentUUID": "4d588883-a7a5-4873-852a-0c60ca7132c3",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "permet de supprimer une assignation",
              "fullTitle": "Gestion des plannings permet de supprimer une assignation",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Accéder à la page de planning hebdomadaire\ncy.visitAsAuthenticatedUser('/planning/hebdomadaire');\n// Sélectionner une semaine\nvar nextMonday = getNextMonday();\ncy.selectDate('[data-cy=week-select]', nextMonday);\n// Créer une assignation pour le test\ncreateTestAssignment();\n// Cliquer sur l'assignation existante\ncy.get('[data-cy=planning-slot].occupied').first().click();\n// Vérifier que le modal d'édition s'ouvre\ncy.get('[data-cy=assignment-modal]').should('be.visible');\n// Intercepter la requête de suppression\ncy.intercept('DELETE', '**/api/planning/assignments/**').as('deleteAssignment');\n// Cliquer sur le bouton de suppression\ncy.get('[data-cy=delete-assignment-button]').click();\n// Confirmer la suppression\ncy.get('[data-cy=confirm-delete-button]').click();\n// Attendre la réponse de l'API\ncy.wait('@deleteAssignment').its('response.statusCode').should('eq', 200);\n// Vérifier le message de succès\ncy.get('[data-cy=notification-success]')\n    .should('be.visible')\n    .and('contain', 'Assignation supprimée');\n// Vérifier que le créneau est maintenant vide\ncy.get('[data-cy=planning-slot].occupied').should('not.exist');",
              "err": {},
              "uuid": "e788db8d-894f-44cb-b9a0-ae8dfbd38ae9",
              "parentUUID": "4d588883-a7a5-4873-852a-0c60ca7132c3",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "permet de publier un planning",
              "fullTitle": "Gestion des plannings permet de publier un planning",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Accéder à la page de planning hebdomadaire\ncy.visitAsAuthenticatedUser('/planning/hebdomadaire');\n// Sélectionner une semaine\nvar nextMonday = getNextMonday();\ncy.selectDate('[data-cy=week-select]', nextMonday);\n// Créer quelques assignations pour le test\ncreateTestAssignment();\n// Intercepter la requête de publication\ncy.intercept('POST', '**/api/planning/publish').as('publishPlanning');\n// Cliquer sur le bouton de publication\ncy.get('[data-cy=publish-planning-button]').click();\n// Confirmer la publication\ncy.get('[data-cy=confirm-publish-button]').click();\n// Attendre la réponse de l'API\ncy.wait('@publishPlanning').its('response.statusCode').should('eq', 200);\n// Vérifier le message de succès\ncy.get('[data-cy=notification-success]')\n    .should('be.visible')\n    .and('contain', 'Planning publié');\n// Vérifier que le planning est marqué comme publié\ncy.get('[data-cy=published-badge]').should('be.visible');",
              "err": {},
              "uuid": "a4fcec3f-7237-49b8-9970-f5e51fa1be6f",
              "parentUUID": "4d588883-a7a5-4873-852a-0c60ca7132c3",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "permet de détecter les conflits lors de la génération d'un planning",
              "fullTitle": "Gestion des plannings permet de détecter les conflits lors de la génération d'un planning",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Accéder à la page de génération de planning\ncy.visitAsAuthenticatedUser('/planning/generator');\n// Sélectionner la semaine\nvar nextMonday = getNextMonday();\ncy.selectDate('[data-cy=week-start-date]', nextMonday);\n// Sélectionner un secteur opératoire\ncy.get('[data-cy=sector-select]').click();\ncy.get('[data-cy=sector-option-1]').click();\n// Activer la détection de conflits stricte\ncy.get('[data-cy=strict-conflict-detection]').click();\n// Simuler un conflit (par exemple, en créant manuellement une absence pour un médecin)\ncreateConflictingLeave();\n// Intercepter la requête de génération\ncy.intercept('POST', '**/api/planning/generate').as('generatePlanning');\n// Lancer la génération\ncy.get('[data-cy=generate-planning-button]').click();\n// Attendre la réponse de l'API\ncy.wait('@generatePlanning');\n// Vérifier l'affichage des conflits\ncy.get('[data-cy=conflicts-modal]').should('be.visible');\ncy.get('[data-cy=conflict-item]').should('have.length.at.least', 1);\n// Résoudre les conflits en ignorant\ncy.get('[data-cy=ignore-conflicts-button]').click();\n// Vérifier que le planning est généré malgré les conflits\ncy.url().should('include', '/planning/hebdomadaire');\ncy.get('[data-cy=planning-table]').should('be.visible');",
              "err": {},
              "uuid": "30292c9d-0678-4387-bcff-2c28e1efcb89",
              "parentUUID": "4d588883-a7a5-4873-852a-0c60ca7132c3",
              "isHook": false,
              "skipped": true
            },
            {
              "title": "permet aux utilisateurs standards de visualiser leur planning",
              "fullTitle": "Gestion des plannings permet aux utilisateurs standards de visualiser leur planning",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Se déconnecter de l'administrateur\ncy.visit('/auth/logout');\n// Se connecter en tant que chirurgien\ncy.loginByApi(surgeonUser.email, surgeonUser.password);\n// Accéder à la page de planning\ncy.visitAsAuthenticatedUser('/planning/hebdomadaire');\n// Vérifier que le chirurgien peut voir le planning\ncy.get('[data-cy=planning-table]').should('be.visible');\n// Vérifier que les assignations sont visibles\ncy.get('[data-cy=planning-view]').should('be.visible');\n// Mais vérifier qu'il n'a pas accès aux fonctions d'édition réservées aux administrateurs\ncy.get('[data-cy=generate-planning-button]').should('not.exist');\ncy.get('[data-cy=publish-planning-button]').should('not.exist');",
              "err": {},
              "uuid": "e9956ec3-8fb0-4f5b-9c1b-1986794e6419",
              "parentUUID": "4d588883-a7a5-4873-852a-0c60ca7132c3",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3fabfd6b-630f-4a71-b876-e38e5cf8d52e"
          ],
          "pending": [],
          "skipped": [
            "b097d786-efdc-4686-b931-96e857441565",
            "e88cac33-5f66-45e1-baa9-168c5346162c",
            "e788db8d-894f-44cb-b9a0-ae8dfbd38ae9",
            "a4fcec3f-7237-49b8-9970-f5e51fa1be6f",
            "30292c9d-0678-4387-bcff-2c28e1efcb89",
            "e9956ec3-8fb0-4f5b-9c1b-1986794e6419"
          ],
          "duration": 375,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}