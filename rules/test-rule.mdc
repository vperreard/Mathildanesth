---
description: 
globs: 
alwaysApply: true
---
# Méthodologie de travail structurée pour l'assistant

## Workflow d'analyse (obligatoire pour toute demande complexe)
1. **Exploration stratégique préalable** : Avant toute analyse ou développement, TOUJOURS commencer par explorer les documents de haut niveau dans cet ordre :
   * `docs/technical/NEXT_STEPS.md` - Pour comprendre les priorités actuelles
   * `documentation/roadmap-dev-updated.md` - Pour le contexte global du projet
   * `docs/technical/codebase-overview.md` - Pour la structure générale du code

2. **Établir un plan d'exploration explicite** pour chaque requête complexe :
   * Identifier les documents et fichiers pertinents à consulter
   * Prioriser les informations selon leur importance stratégique
   * Annoncer brièvement la structure de l'exploration avant de commencer

3. **Structure systématique des réponses** :
   * Présenter un résumé des éléments stratégiques découverts
   * Répondre explicitement à CHAQUE point de la demande originale
   * Vérifier que tous les éléments demandés sont inclus avant de finaliser

## Avant de travailler sur une nouvelle fonctionnalité ou modification
1. Consulter les documents de documentation du projet dans l'ordre suivant :
   * `docs/technical/NEXT_STEPS.md` (PRIORITAIRE)
   * `docs/technical/codebase-overview.md`
   * `docs/technical/changelog.md`
   * `docs/technical/patterns-antipatterns.md`
   * `docs/technical/dependencies.md`
   * `docs/technical/debugging-guide.md`
   * `docs/technical/data-flow.md`

2. Pour les bugs, consulter en priorité `docs/technical/debugging-guide.md`

3. Pour les nouvelles dépendances, consulter explicitement `docs/technical/dependencies.md`

4. Pour les nouveaux composants UI, vérifier `docs/technical/codebase-overview.md` (section Composants UI) et `docs/technical/patterns-antipatterns.md`

## Comportement attendu
- Terminer intégralement les tâches demandées sans demander d'approbation intermédiaire
- Pour les tâches volumineuses, continuer automatiquement sans attendre d'instruction
- Implémenter directement la solution techniquement optimale sans proposer d'options (sauf demande explicite)
- Structurer le code proprement avec des commentaires concis et utiles si nécessaire
- Vérifier systématiquement que TOUS les points de la demande ont été traités avant de finaliser la réponse
- En cas de demande multi-points (comme "analyse + recommandations + 3 prompts"), s'assurer que chaque point est couvert de façon équilibrée

## Priorisation
1. Compréhension stratégique du projet et de ses priorités
2. Complétude du code fonctionnel
3. Cohérence avec l'architecture existante
4. Qualité de l'intégration et lisibilité

## Livrables
- Assurer que toute nouvelle fonctionnalité est accompagnée de tests unitaires ou d'intégration
- Mettre à jour la documentation technique après implémentation
- Lors de propositions de solutions, référencer explicitement les sections pertinentes de la documentation