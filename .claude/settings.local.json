{
  "permissions": {
    "allow": [
      "Bash(npm run lint:*)",
      "Bash(npx eslint:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(find *)",
      "Bash(chmod:*)",
      "Bash(ls:*)",
      "Bash(npm outdated:*)",
      "Bash(npm run health-check:*)",
      "Bash(./scripts/migrate-xlsx-to-csv.sh:*)",
      "Bash(node:*)",
      "Bash(npm run test:*)",
      "Bash(sed:*)",
      "Bash(node test-password.js)",
      "Bash(node:*)",
      "Bash(touch:*)",
      "Bash(npx prisma migrate:*)",
      "Bash(npx prisma db pull:*)",
      "Bash(npm test:*)",
      "Bash(npm test:*)",
      "Bash(rm:*)",
      "Bash(mkdir:*)",
      "Bash(npx tsc:*)",
      "Bash(rm:*)",
      "Bash(npm run performance:audit:*)",
      "Bash(rg:*)",
      "Bash(npm run performance:analyze:*)",
      "Bash(npm install:*)",
      "Bash(open:*)",
      "Bash(npm run build:*)",
      "Bash(npx jest:*)",
      "Bash(npm run cypress:open:*)",
      "Bash(npm run cypress:run:*)",
      "Bash(./scripts/run-cypress-full-report.sh:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(HUSKY=0 git add -A)",
      "Bash(HUSKY=0 git commit -m \"🔒 SAUVEGARDE AVANT REFACTORING PHASE 1 - État stable avec ROADMAP consolidé et documentation nettoyée\")",
      "Bash(npm run dev:*)",
      "Bash(npm run:*)",
      "Bash(docker-compose up:*)",
      "Bash(npx prisma db push:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(npx tsx:*)",
      "Bash(for file in BlocDayPlanningEditor.tsx BlocDayPlanningView.tsx BlocDayView.tsx BlocPlanning.tsx BlocPlanningDay.tsx BlocPlanningEditor.tsx BlocVacation.tsx OptimizedBlocPlanning.tsx)",
      "Bash(do cp \"src/app/bloc-operatoire/components/$file\" \"src/app/(app)/bloc-operatoire/planning/components/\")",
      "Bash(done)",
      "Bash(mv:*)",
      "Bash(npx tsx:*)",
      "Bash(cp:*)",
      "Bash(mv:*)",
      "Bash(mv:*)",
      "Bash(diff:*)",
      "Bash(mv:*)",
      "Bash(./scripts/update-bloc-service-imports.sh:*)",
      "Bash(npx cypress run:*)",
      "Bash(npm run dev:*)",
      "Bash(./scripts/generate-pwa-icons.sh:*)",
      "Bash(./scripts/validate-mobile-implementation.sh:*)",
      "Bash(for file in src/modules/rules/engine/temporal-rules.ts src/modules/rules/engine/fatigue-system.ts src/modules/rules/services/RuleBasedPlanningGeneratorService.ts src/modules/templates/types/template.ts src/modules/templates/components/AssignmentConfigPanel.tsx)",
      "Bash(do sed -i '' 's/garde\\/vacation/affectation/g' \"$file\")",
      "Bash(done)",
      "Bash(timeout 10 npm run dev)",
      "Bash(npm run dev:*)",
      "Bash(curl:*)",
      "Bash(curl:*)",
      "Bash(/Users/vincentperreard/Mathildanesth/remove-jest-mocks.sh)",
      "Bash(cp:*)",
      "Bash(/Users/vincentperreard/Mathildanesth/fix-prisma-imports.sh:*)",
      "Bash(git reset:*)",
      "Bash(npx tsx:*)",
      "Bash(pkill:*)",
      "Bash(cat:*)",
      "Bash(gtimeout:*)",
      "Bash(npx ts-node:*)",
      "Bash(npx prisma studio:*)",
      "Bash(npx ts-node:*)",
      "Bash(npx prisma generate:*)",
      "Bash(npx prisma db execute:*)",
      "Bash(npm ls:*)",
      "Bash(npm ls:*)",
      "Bash(./fix-component-tests.sh:*)",
      "Bash(git push:*)",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(if grep -q \"setupTestEnvironment\\|cleanupTestEnvironment\" \"$file\")",
      "Bash(then)",
      "Bash(echo:*)",
      "Bash(fi)",
      "Bash(nvm:*)",
      "Bash(NODE_OPTIONS=\"--no-deprecation --no-warnings\" npm test --passWithNoTests --silent)",
      "Bash(NODE_OPTIONS=\"--no-deprecation --no-warnings\" npm test src/hooks/__tests__/useContextualMessagesWebSocket.test.tsx --passWithNoTests --silent)",
      "Bash(true)",
      "Bash(curl -s -X POST http://localhost:3000/api/auth/login  -H \"Content-Type: application/json\"  -d '{\"\"login\"\":\"\"testuser\"\",\"\"password\"\":\"\"test123\"\"}')",
      "Bash(# Déplace les rapports et documentation\nmv *_REPORT*.md *_ANALYSIS*.md *_IMPLEMENTATION*.md *RAPPORT*.md temp-cleanup/reports/ 2>/dev/null || true\nmv CLAUDE_WORKERS*.md GUIDE*.md PLAN*.md temp-cleanup/documentation/ 2>/dev/null || true\n\n# Déplace les configs Jest multiples (garde le principal)\nmv jest.*.js temp-cleanup/configs/ 2>/dev/null || true\ncp temp-cleanup/configs/jest.config.js . 2>/dev/null || true\n\n# Déplace les configs et tests temporaires  \nmv test-*.* *-test.* temp-cleanup/tests/ 2>/dev/null || true\nmv cypress-*.* temp-cleanup/tests/ 2>/dev/null || true\n\n# Déplace les scripts temporaires\nmv create-*.js check-*.js debug-*.js temp-cleanup/scripts/ 2>/dev/null || true\n\necho \"✅ Première vague de nettoyage terminée\")",
      "Bash(# Déplace d'autres fichiers markdown problématiques\nmv *COVERAGE*.md *PERFORMANCE*.md *INFRASTRUCTURE*.md temp-cleanup/reports/ 2>/dev/null || true\nmv *DECISIONS*.md *CHANGEMENTS*.md temp-cleanup/documentation/ 2>/dev/null || true\n\n# Nettoie les fichiers de performance et qualité\nmv performance-*.json quality-*.* temp-cleanup/reports/ 2>/dev/null || true\nmv untested-files-report.json accessibility-reports.json temp-cleanup/reports/ 2>/dev/null || true\n\necho \"✅ Deuxième vague de nettoyage terminée\")",
      "Bash(# Garde seulement CLAUDE.md et README.md à la racine\n# Déplace le reste dans docs/\nmv DOCUMENTATION_INDEX.md docs/ 2>/dev/null || true\nmv KNOWN_ISSUES.md docs/04_roadmap/ 2>/dev/null || true\n\n# Déplace les guides et améliorations\nmv *IMPROVEMENTS*.md *QUICK*.md temp-cleanup/documentation/ 2>/dev/null || true\nmv *INSTRUCTIONS*.md *SOLUTION*.md temp-cleanup/documentation/ 2>/dev/null || true\n\n# Déplace les fichiers de tests et stratégies  \nmv *tests.md *TEST*.md *STRATEGIE*.md temp-cleanup/documentation/ 2>/dev/null || true\nmv erreurs-detectees-navigation.md temp-cleanup/reports/ 2>/dev/null || true\n\n# Déplace les traductions et types\nmv TRADUCTIONS*.md *IMPORTS*.md temp-cleanup/documentation/ 2>/dev/null || true\n\necho \"✅ Fichiers .md organisés\")",
      "Bash(timeout 60 npm run claude:workers)",
      "Bash(# Nettoie les derniers fichiers problématiques\nls -1 *.js *.json 2>/dev/null | grep -v -E \"(package|next\\.config|jest\\.config\\.js$)\")",
      "Bash(# Déplace les 2 derniers .md dans docs\nmv PHASE_3_MIGRATION_PLAN.md docs/04_roadmap/ 2>/dev/null || true\nmv STABILIZATION_STATUS.md docs/04_roadmap/ 2>/dev/null || true\n\necho \"✅ Derniers fichiers .md déplacés\")",
      "Bash(# Garde seulement les configs Jest utiles\nmkdir -p config/jest/\nmv temp-cleanup/configs/jest.config.js config/jest/jest.config.main.js 2>/dev/null || true  \nmv temp-cleanup/configs/jest.config.bulletproof.js config/jest/ 2>/dev/null || true\ncp config/jest/jest.config.main.js jest.config.js 2>/dev/null || true\n\n# Garde quelques documentations importantes dans docs/\nmv temp-cleanup/documentation/CLAUDE_WORKERS_GUIDE.md docs/03_Guides_Developpement/ 2>/dev/null || true\nmv temp-cleanup/documentation/QUICK_REFERENCE_CLAUDE_WORKERS.md docs/03_Guides_Developpement/ 2>/dev/null || true\n\n# Garde quelques rapports récents dans docs/\nmkdir -p docs/05_reports/\nmv temp-cleanup/reports/*FINAL* docs/05_reports/ 2>/dev/null || true\nmv temp-cleanup/reports/*COVERAGE* docs/05_reports/ 2>/dev/null || true\n\necho \"✅ Fichiers importants sauvegardés\")",
      "Bash(bash:*)",
      "Bash(# Supprime tout le reste (fichiers temporaires et doublons)\nrm -rf temp-cleanup/\n\necho \"🗑️ Fichiers temporaires supprimés\"\necho \"\"\necho \"📊 NETTOYAGE TERMINÉ:\"\necho \"✅ Racine nettoyée : $(ls -la | grep -E '^-.*\\.(md|js|json)$' | wc -l) fichiers restants\"\necho \"✅ Documentation organisée dans docs/\"\necho \"✅ Configs Jest dans config/jest/\"\necho \"✅ Rapports importants dans docs/05_reports/\")",
      "Bash(# Déplace le dernier fichier de stratégie\nmv STRATEGIE_TESTS_MANUELS.md docs/03_Guides_Developpement/ 2>/dev/null || true\n\n# Nettoie les configs Next.js dupliqués (garde juste le principal)\nmkdir -p config/nextjs/\nmv next.config.advanced.js next.config.optimized*.js config/nextjs/ 2>/dev/null || true\n\necho \"🧹 Nettoyage final terminé\")",
      "Bash(# Déplace les derniers fichiers de résultats\nmv baseline-06012025.json performance-test-results.json docs/05_reports/ 2>/dev/null || true\n\necho \"🧹 Nettoyage final des résultats de tests\"\necho \"📊 Fichiers restants à la racine: $(ls -la | grep -E '^-.*\\.(md|js|json|ts)$' | wc -l)\")",
      "Bash(PORT=3000 npm run dev)",
      "Bash(npx prisma db seed:*)",
      "Bash(kill:*)",
      "Bash(convert:*)",
      "Bash(sips:*)",
      "Bash(true)",
      "Bash(git checkout:*)",
      "Bash(grep:*)",
      "Bash(npm install:*)",
      "Bash(npm search:*)",
      "Bash(task-master-ai:*)",
      "Bash(ls:*)",
      "Bash(~/.npm-global/bin/task-master-ai --help)",
      "Bash(mkdir:*)",
      "Bash(~/.npm-global/bin/task-master-mcp:*)",
      "Bash(~/.npm-global/bin/task-master:*)",
      "Bash(tm parse-prd:*)",
      "Bash(npm test:*)",
      "Bash(find:*)",
      "Bash(npm audit:*)",
      "Bash(npm run build:*)",
      "Bash(node:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(rm /Users/vincentperreard/Mathildanesth/scripts/fix-route-params.js)",
      "Bash(rm:*)",
      "Bash(sed:*)",
      "Bash(git pull:*)",
      "Bash(git merge:*)",
      "Bash(git checkout:*)",
      "Bash(npm audit:*)",
      "Bash(git restore:*)",
      "Bash(git rebase:*)",
      "Bash(git reset:*)",
      "Bash(git stash:*)",
      "Bash(gh pr create:*)",
      "Bash(git stash:*)",
      "Bash(git push:*)",
      "Bash(chmod:*)",
      "Bash(NEXT_PUBLIC_API_URL=http://localhost:3003 node scripts/benchmark-auth.js)",
      "Bash(git branch:*)",
      "Bash(NEXT_PUBLIC_API_URL=http://localhost:3003 node scripts/benchmark-auth.mjs)",
      "Bash(git fetch:*)",
      "Bash(git stash:*)",
      "Bash(npx prettier:*)",
      "Bash(git branch:*)",
      "Bash(gh pr create:*)",
      "Bash(./check-build-errors.sh:*)",
      "Bash(./check-app-errors.sh:*)",
      "Bash(./scripts/check-build.sh:*)",
      "Bash(git remote get-url:*)",
      "Bash(./scripts/fix-build-errors.sh:*)",
      "Bash(./scripts/quick-check.sh:*)",
      "Bash(./scripts/tm:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(rg:*)",
      "Bash(npm run verify)",
      "Bash(npm run verify:*)",
      "Bash(./scripts/claude-auto.sh*)",
      "Bash(npm run etape)",
      "Bash(npm run test:fast)",
      "Bash(npm run test:bulletproof)",
      "Bash(echo*)",
      "Bash(pwd)",
      "Bash(./scripts/claude-auto.sh:*)",
      "Bash(xargs*)",
      "Bash(wc*)",
      "Bash(find * | xargs*)",
      "Bash(find * | grep*)",
      "Bash(awk*)",
      "Bash(sort*)",
      "Bash(uniq*)",
      "Bash(head*)",
      "Bash(tail*)",
      "Bash(HUSKY=0 git commit -m \"feat: nettoyer 525 fichiers de console.log - Subtask 5.2\n\n- Remplacé tous les console.log/error/warn/info/debug par logger système\n- 525 fichiers modifiés avec import automatique du logger\n- Conservation du niveau de log approprié (error→logger.error, etc.)\n- Exclusion du fichier logger.ts qui doit garder console natif\")",
      "Bash(claude mcp)",
      "Bash(claude mcp:*)",
      "mcp__taskmaster-ai__get_tasks",
      "mcp__taskmaster-ai__add_task",
      "Bash(npm run lint)",
      "Bash(HUSKY=0 git commit -m \"fix: correction massive de 2643 erreurs TypeScript\n\n- Correction de 936 erreurs de logger (error unknown)\n- Correction de 1113 erreurs d''imports et types manquants\n- Correction de 594 erreurs restantes (Promise<any>, Record<string, any>, catch blocks)\n- Commentaire des imports de composants inexistants\n- Conversion any vers unknown pour plus de sécurité des types\n- Fix des comparaisons de types incompatibles (string vs number)\n- Ajout de gestion d''erreur appropriée dans catch blocks\")",
      "mcp__taskmaster-ai__update_task",
      "Bash(HUSKY=0 git commit -m \"fix: correction supplémentaire de 7109 erreurs TypeScript\n\n- Correction des problèmes de logger avec Error objects\n- Correction des exports de types avec isolatedModules\n- Correction des problèmes de syntaxe\n- Conversion des exports vers export type\n- Total: 219 erreurs restantes (de 7328)\")",
      "Bash(./scripts/auth-migration/find-nextauth-usage.sh:*)",
      "Bash(HUSKY=0 git commit -m \"fix: correction de syntaxe et nettoyage des scripts temporaires\n\n- Correction des erreurs de syntaxe dans les appels logger\n- Nettoyage des scripts de correction temporaires\n- Mise à jour du statut de la tâche TypeScript\n- 549 erreurs restantes (de 7328 initial)\")",
      "Bash(HUSKY=0 git commit -m \"fix: correction massive des erreurs TypeScript - Phase finale\n\n- Correction de 432 fichiers avec pattern logger\n- Exclusion du dossier backup dans tsconfig.json\n- Conversion unknown → any pour les maps de données\n- Correction des erreurs de syntaxe dans les routes API\n- 7409 erreurs restantes (principalement variables non utilisées et types unknown)\")",
      "mcp__taskmaster-ai__set_task_status",
      "mcp__taskmaster-ai__update_subtask",
      "mcp__taskmaster-ai__get_task",
      "Bash(npx depcheck:*)",
      "Bash(npm run:*)",
      "Bash(cat:*)",
      "Bash(git rm:*)",
      "Bash(npm uninstall:*)",
      "Bash(git cherry-pick:*)",
      "Bash(jq:*)",
      "Bash(npx next build:*)",
      "Bash(mv:*)",
      "Bash(mcp list:*)",
      "Bash(./scripts/import-trames-refonte-tasks.js:*)",
      "Bash(npx taskmaster:*)"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true
}